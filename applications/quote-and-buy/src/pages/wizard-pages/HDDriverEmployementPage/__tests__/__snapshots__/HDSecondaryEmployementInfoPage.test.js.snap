// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HDSecondaryEmployementInfoPage /> Click No and expect no further questions 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDSecondaryEmployementInfoPage)>
      <HDSecondaryEmployementInfoPage
        multiCarFlag={true}
        setNavigation={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": false,
                "allowPost": false,
                "allowSMS": false,
                "allowTelephone": false,
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
      >
        <Container
          className="secondary-empl-container"
          fluid={false}
        >
          <div
            className="secondary-empl-container container"
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <HDForm
                      className=""
                      initValues={Object {}}
                      onValidation={[Function]}
                      passedKey="default-key"
                      resetFormOnStart={false}
                      submissionVM={
                        Object {
                          "baseData": Object {
                            "accountHolder": Object {
                              "dateOfBirth": null,
                            },
                            "isExistingCustomer": false,
                            "isPostalDocument": false,
                            "jobType": "Submission",
                            "marketingContacts": Object {
                              "allowEmail": false,
                              "allowPost": false,
                              "allowSMS": false,
                              "allowTelephone": false,
                            },
                            "periodStatus": "Draft",
                            "policyAddress": Object {},
                            "producerCode": "Default",
                            "productCode": "PrivateCar_Ext",
                            "productName": "Private Car",
                            "termType": "Annual",
                          },
                          "lobData": Object {
                            "privateCar": Object {
                              "coverables": Object {
                                "addInterestTypeCategory": "PAVhcleAddlInterest",
                                "drivers": Array [
                                  Object {
                                    "claimsAndConvictions": Object {
                                      "claimsDetailsCollection": Array [],
                                      "convictionsCollection": Array [],
                                    },
                                    "licenceObtainedDate": null,
                                    "person": Object {
                                      "prefix": Object {},
                                    },
                                    "previousPoliciesInformation": Object {},
                                    "residingInUKSince": null,
                                    "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                  },
                                ],
                                "vehicleDrivers": Array [
                                  Object {},
                                ],
                                "vehicles": Array [
                                  Object {
                                    "isCarModified": "",
                                    "ncdProtection": Object {
                                      "drivingExperience": Object {},
                                    },
                                    "tracker": "",
                                    "vehicleModifications": Array [],
                                    "vehicleWorth": "",
                                  },
                                ],
                              },
                              "preQualQuestionSets": Array [],
                            },
                          },
                        }
                      }
                      validationSchema={
                        ObjectSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_defaultDefault": [Function],
                          "_deps": Array [],
                          "_excludedEdges": Array [],
                          "_exclusive": Object {},
                          "_mutate": undefined,
                          "_nodes": Array [
                            "businessTypePart",
                            "occupationPart",
                            "hasPartTimeEmp",
                          ],
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "object",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "fields": Object {
                            "businessTypePart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                            },
                            "hasPartTimeEmp": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                                "required": true,
                              },
                              "_mutate": undefined,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "tests": Array [
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "string",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                            },
                            "occupationPart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                            },
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                          "type": "object",
                        }
                      }
                    >
                      <Formik
                        initialTouched={Array []}
                        initialValues={
                          Object {
                            "businessTypePart": "",
                            "hasPartTimeEmp": "",
                            "occupationPart": "",
                          }
                        }
                        key="default-key"
                        validateOnMount={true}
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "businessTypePart",
                              "occupationPart",
                              "hasPartTimeEmp",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "businessTypePart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                              },
                              "hasPartTimeEmp": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                              },
                              "occupationPart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Form
                          className=""
                          inline={false}
                          noValidate={true}
                          onSubmit={[Function]}
                        >
                          <form
                            className=""
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp.hasPartTimeEmp.another-job-button-group"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDToggleButtonGroup",
                                    }
                                  }
                                  availableValues={
                                    Array [
                                      Object {
                                        "name": "Yes",
                                        "value": "true",
                                      },
                                      Object {
                                        "name": "No",
                                        "value": "false",
                                      },
                                    ]
                                  }
                                  btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                  className="undefined "
                                  custom={true}
                                  customClassName=""
                                  id="another-job-button-group"
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-another-job-label",
                                      "text": "Do you have another job?",
                                    }
                                  }
                                  name="hasPartTimeEmp"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                  value="false"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Do you have another job?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    availableValues={
                                      Array [
                                        Object {
                                          "name": "Yes",
                                          "value": "true",
                                        },
                                        Object {
                                          "name": "No",
                                          "value": "false",
                                        },
                                      ]
                                    }
                                    btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                    className="undefined  custom"
                                    customClassName=""
                                    id="another-job-button-group"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-another-job-label",
                                        "text": "Do you have another job?",
                                      }
                                    }
                                    name="hasPartTimeEmp"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                    value="false"
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "Do you have another job?",
                                      }
                                    }
                                  >
                                    <HDToggleButtonGroup
                                      availableValues={
                                        Array [
                                          Object {
                                            "name": "Yes",
                                            "value": "true",
                                          },
                                          Object {
                                            "name": "No",
                                            "value": "false",
                                          },
                                        ]
                                      }
                                      btnClassName=""
                                      btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                      className="undefined  custom"
                                      customClassName=""
                                      data={null}
                                      disabled={false}
                                      doReset={false}
                                      id="another-job-button-group"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-another-job-label",
                                          "text": "Do you have another job?",
                                        }
                                      }
                                      name="hasPartTimeEmp"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                      type="radio"
                                      value="false"
                                    >
                                      <div
                                        className=" undefined  custom"
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-another-job-label"
                                          text="Do you have another job?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-another-job-label"
                                          >
                                            Do you have another job?
                                          </h2>
                                        </HDLabelRefactor>
                                        <ForwardRef
                                          className="grid grid--col-2 grid--col-lg-3"
                                          name="hasPartTimeEmp"
                                          type="radio"
                                          value="false"
                                          vertical={false}
                                        >
                                          <ButtonGroup
                                            className="grid grid--col-2 grid--col-lg-3"
                                            role="group"
                                            toggle={true}
                                            vertical={false}
                                          >
                                            <div
                                              className="grid grid--col-2 grid--col-lg-3 btn-group btn-group-toggle"
                                              role="group"
                                            >
                                              <ToggleButton
                                                checked={false}
                                                className=""
                                                disabled={false}
                                                key=".$true"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="true"
                                                variant="default"
                                              >
                                                <Button
                                                  active={false}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={false}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="true"
                                                    />
                                                    <div>
                                                      <div>
                                                        Yes
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                              <ToggleButton
                                                checked={true}
                                                className=""
                                                disabled={false}
                                                key=".$false"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="false"
                                                variant="default"
                                              >
                                                <Button
                                                  active={true}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn active btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={true}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="false"
                                                    />
                                                    <div>
                                                      <div>
                                                        No
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                            </div>
                                          </ButtonGroup>
                                        </ForwardRef>
                                      </div>
                                    </HDToggleButtonGroup>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  />
                                </Feedback>
                              </div>
                            </FormGroup>
                            <hr />
                          </form>
                        </Form>
                      </Formik>
                    </HDForm>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Container>
      </HDSecondaryEmployementInfoPage>
    </Connect(HDSecondaryEmployementInfoPage)>
  </Provider>
</Component>
`;

exports[`<HDSecondaryEmployementInfoPage /> Click Yes and display What industry is this ? 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDSecondaryEmployementInfoPage)>
      <HDSecondaryEmployementInfoPage
        multiCarFlag={true}
        setNavigation={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": false,
                "allowPost": false,
                "allowSMS": false,
                "allowTelephone": false,
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
      >
        <Container
          className="secondary-empl-container"
          fluid={false}
        >
          <div
            className="secondary-empl-container container"
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <HDForm
                      className=""
                      initValues={Object {}}
                      onValidation={[Function]}
                      passedKey="default-key"
                      resetFormOnStart={false}
                      submissionVM={
                        Object {
                          "baseData": Object {
                            "accountHolder": Object {
                              "dateOfBirth": null,
                            },
                            "isExistingCustomer": false,
                            "isPostalDocument": false,
                            "jobType": "Submission",
                            "marketingContacts": Object {
                              "allowEmail": false,
                              "allowPost": false,
                              "allowSMS": false,
                              "allowTelephone": false,
                            },
                            "periodStatus": "Draft",
                            "policyAddress": Object {},
                            "producerCode": "Default",
                            "productCode": "PrivateCar_Ext",
                            "productName": "Private Car",
                            "termType": "Annual",
                          },
                          "lobData": Object {
                            "privateCar": Object {
                              "coverables": Object {
                                "addInterestTypeCategory": "PAVhcleAddlInterest",
                                "drivers": Array [
                                  Object {
                                    "claimsAndConvictions": Object {
                                      "claimsDetailsCollection": Array [],
                                      "convictionsCollection": Array [],
                                    },
                                    "licenceObtainedDate": null,
                                    "person": Object {
                                      "prefix": Object {},
                                    },
                                    "previousPoliciesInformation": Object {},
                                    "residingInUKSince": null,
                                    "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                  },
                                ],
                                "vehicleDrivers": Array [
                                  Object {},
                                ],
                                "vehicles": Array [
                                  Object {
                                    "isCarModified": "",
                                    "ncdProtection": Object {
                                      "drivingExperience": Object {},
                                    },
                                    "tracker": "",
                                    "vehicleModifications": Array [],
                                    "vehicleWorth": "",
                                  },
                                ],
                              },
                              "preQualQuestionSets": Array [],
                            },
                          },
                        }
                      }
                      validationSchema={
                        ObjectSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_defaultDefault": [Function],
                          "_deps": Array [],
                          "_excludedEdges": Array [],
                          "_exclusive": Object {},
                          "_mutate": undefined,
                          "_nodes": Array [
                            "businessTypePart",
                            "occupationPart",
                            "hasPartTimeEmp",
                          ],
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "object",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "fields": Object {
                            "businessTypePart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                            },
                            "hasPartTimeEmp": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                                "required": true,
                              },
                              "_mutate": undefined,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "tests": Array [
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "string",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                            },
                            "occupationPart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                            },
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                          "type": "object",
                        }
                      }
                    >
                      <Formik
                        initialTouched={Array []}
                        initialValues={
                          Object {
                            "businessTypePart": "",
                            "hasPartTimeEmp": "",
                            "occupationPart": "",
                          }
                        }
                        key="default-key"
                        validateOnMount={true}
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "businessTypePart",
                              "occupationPart",
                              "hasPartTimeEmp",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "businessTypePart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                              },
                              "hasPartTimeEmp": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                              },
                              "occupationPart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Form
                          className=""
                          inline={false}
                          noValidate={true}
                          onSubmit={[Function]}
                        >
                          <form
                            className=""
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp.hasPartTimeEmp.another-job-button-group"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDToggleButtonGroup",
                                    }
                                  }
                                  availableValues={
                                    Array [
                                      Object {
                                        "name": "Yes",
                                        "value": "true",
                                      },
                                      Object {
                                        "name": "No",
                                        "value": "false",
                                      },
                                    ]
                                  }
                                  btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                  className="undefined "
                                  custom={true}
                                  customClassName=""
                                  id="another-job-button-group"
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-another-job-label",
                                      "text": "Do you have another job?",
                                    }
                                  }
                                  name="hasPartTimeEmp"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                  value="true"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Do you have another job?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    availableValues={
                                      Array [
                                        Object {
                                          "name": "Yes",
                                          "value": "true",
                                        },
                                        Object {
                                          "name": "No",
                                          "value": "false",
                                        },
                                      ]
                                    }
                                    btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                    className="undefined  custom"
                                    customClassName=""
                                    id="another-job-button-group"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-another-job-label",
                                        "text": "Do you have another job?",
                                      }
                                    }
                                    name="hasPartTimeEmp"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                    value="true"
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "Do you have another job?",
                                      }
                                    }
                                  >
                                    <HDToggleButtonGroup
                                      availableValues={
                                        Array [
                                          Object {
                                            "name": "Yes",
                                            "value": "true",
                                          },
                                          Object {
                                            "name": "No",
                                            "value": "false",
                                          },
                                        ]
                                      }
                                      btnClassName=""
                                      btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                      className="undefined  custom"
                                      customClassName=""
                                      data={null}
                                      disabled={false}
                                      doReset={false}
                                      id="another-job-button-group"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-another-job-label",
                                          "text": "Do you have another job?",
                                        }
                                      }
                                      name="hasPartTimeEmp"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                      type="radio"
                                      value="true"
                                    >
                                      <div
                                        className=" undefined  custom"
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-another-job-label"
                                          text="Do you have another job?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-another-job-label"
                                          >
                                            Do you have another job?
                                          </h2>
                                        </HDLabelRefactor>
                                        <ForwardRef
                                          className="grid grid--col-2 grid--col-lg-3"
                                          name="hasPartTimeEmp"
                                          type="radio"
                                          value="true"
                                          vertical={false}
                                        >
                                          <ButtonGroup
                                            className="grid grid--col-2 grid--col-lg-3"
                                            role="group"
                                            toggle={true}
                                            vertical={false}
                                          >
                                            <div
                                              className="grid grid--col-2 grid--col-lg-3 btn-group btn-group-toggle"
                                              role="group"
                                            >
                                              <ToggleButton
                                                checked={true}
                                                className=""
                                                disabled={false}
                                                key=".$true"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="true"
                                                variant="default"
                                              >
                                                <Button
                                                  active={true}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn active btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={true}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="true"
                                                    />
                                                    <div>
                                                      <div>
                                                        Yes
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                              <ToggleButton
                                                checked={false}
                                                className=""
                                                disabled={false}
                                                key=".$false"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="false"
                                                variant="default"
                                              >
                                                <Button
                                                  active={false}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={false}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="false"
                                                    />
                                                    <div>
                                                      <div>
                                                        No
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                            </div>
                                          </ButtonGroup>
                                        </ForwardRef>
                                      </div>
                                    </HDToggleButtonGroup>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  />
                                </Feedback>
                              </div>
                            </FormGroup>
                            <hr />
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.occupationPart.occupationPart.secondary-empl-occupation"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDAsyncSelect",
                                    }
                                  }
                                  cacheOptions={true}
                                  className="undefined "
                                  custom={true}
                                  id="secondary-empl-occupation"
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-what-job-label",
                                      "text": "What is it?",
                                    }
                                  }
                                  loadOptions={[Function]}
                                  name="occupationPart"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onInputChange={[Function]}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                  placeholder="Start typing..."
                                  selectSize="md-8"
                                  value=""
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "What is it?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    cacheOptions={true}
                                    className="undefined  custom"
                                    id="secondary-empl-occupation"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-what-job-label",
                                        "text": "What is it?",
                                      }
                                    }
                                    loadOptions={[Function]}
                                    name="occupationPart"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onInputChange={[Function]}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                    placeholder="Start typing..."
                                    selectSize="md-8"
                                    value=""
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "What is it?",
                                      }
                                    }
                                  >
                                    <HDAsyncSelect
                                      cacheOptions={true}
                                      className="undefined  custom"
                                      customClassName=""
                                      defaultOptions={false}
                                      defaultValue={null}
                                      displayValidationMessage={true}
                                      id="secondary-empl-occupation"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-what-job-label",
                                          "text": "What is it?",
                                        }
                                      }
                                      loadOptions={[Function]}
                                      name="occupationPart"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onInputChange={[Function]}
                                      options={null}
                                      path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                      placeholder="Start typing..."
                                      selectSize="md-8"
                                      value=""
                                    >
                                      <div
                                        className="undefined  custom "
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-what-job-label"
                                          text="What is it?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-what-job-label"
                                          >
                                            What is it?
                                          </h2>
                                        </HDLabelRefactor>
                                        <Async
                                          cacheOptions={true}
                                          className="async-select col-md-8 pl-0 pr-0"
                                          components={
                                            Object {
                                              "DropdownIndicator": [Function],
                                              "IndicatorSeperator": [Function],
                                            }
                                          }
                                          defaultOptions={false}
                                          filterOption={null}
                                          isClearable={true}
                                          loadOptions={[Function]}
                                          name="occupationPart"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onInputChange={[Function]}
                                          path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                          placeholder="Start typing..."
                                          styles={
                                            Object {
                                              "control": [Function],
                                              "menu": [Function],
                                            }
                                          }
                                          value=""
                                        >
                                          <StateManager
                                            cacheOptions={true}
                                            className="async-select col-md-8 pl-0 pr-0"
                                            components={
                                              Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeperator": [Function],
                                              }
                                            }
                                            defaultInputValue=""
                                            defaultMenuIsOpen={false}
                                            defaultOptions={false}
                                            defaultValue={null}
                                            filterOption={null}
                                            isClearable={true}
                                            isLoading={false}
                                            name="occupationPart"
                                            noOptionsMessage={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onInputChange={[Function]}
                                            options={Array []}
                                            path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                            placeholder="Start typing..."
                                            styles={
                                              Object {
                                                "control": [Function],
                                                "menu": [Function],
                                              }
                                            }
                                            value=""
                                          >
                                            <Select
                                              backspaceRemovesValue={true}
                                              blurInputOnSelect={true}
                                              cacheOptions={true}
                                              captureMenuScroll={false}
                                              className="async-select col-md-8 pl-0 pr-0"
                                              closeMenuOnScroll={false}
                                              closeMenuOnSelect={true}
                                              components={
                                                Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeperator": [Function],
                                                }
                                              }
                                              controlShouldRenderValue={true}
                                              defaultOptions={false}
                                              escapeClearsValue={false}
                                              filterOption={null}
                                              formatGroupLabel={[Function]}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              inputValue=""
                                              isClearable={true}
                                              isDisabled={false}
                                              isLoading={false}
                                              isMulti={false}
                                              isOptionDisabled={[Function]}
                                              isRtl={false}
                                              isSearchable={true}
                                              loadingMessage={[Function]}
                                              maxMenuHeight={300}
                                              menuIsOpen={false}
                                              menuPlacement="bottom"
                                              menuPosition="absolute"
                                              menuShouldBlockScroll={false}
                                              menuShouldScrollIntoView={true}
                                              minMenuHeight={140}
                                              name="occupationPart"
                                              noOptionsMessage={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onInputChange={[Function]}
                                              onMenuClose={[Function]}
                                              onMenuOpen={[Function]}
                                              openMenuOnClick={true}
                                              openMenuOnFocus={false}
                                              options={Array []}
                                              pageSize={5}
                                              path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                              placeholder="Start typing..."
                                              screenReaderStatus={[Function]}
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "menu": [Function],
                                                }
                                              }
                                              tabIndex="0"
                                              tabSelectsValue={true}
                                              value=""
                                            >
                                              <SelectContainer
                                                className="async-select col-md-8 pl-0 pr-0"
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={false}
                                                innerProps={
                                                  Object {
                                                    "id": undefined,
                                                    "onKeyDown": [Function],
                                                  }
                                                }
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={Array []}
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cacheOptions": true,
                                                    "captureMenuScroll": false,
                                                    "className": "async-select col-md-8 pl-0 pr-0",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "IndicatorSeperator": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": false,
                                                    "escapeClearsValue": false,
                                                    "filterOption": null,
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputValue": "",
                                                    "isClearable": true,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "occupationPart",
                                                    "noOptionsMessage": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [],
                                                    "pageSize": 5,
                                                    "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                    "placeholder": "Start typing...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "control": [Function],
                                                      "menu": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": "",
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <div
                                                  className="css-1pcexqc-container async-select col-md-8 pl-0 pr-0"
                                                  onKeyDown={[Function]}
                                                >
                                                  <Control
                                                    clearValue={[Function]}
                                                    cx={[Function]}
                                                    getStyles={[Function]}
                                                    getValue={[Function]}
                                                    hasValue={false}
                                                    innerProps={
                                                      Object {
                                                        "onMouseDown": [Function],
                                                        "onTouchEnd": [Function],
                                                      }
                                                    }
                                                    innerRef={[Function]}
                                                    isDisabled={false}
                                                    isFocused={false}
                                                    isMulti={false}
                                                    isRtl={false}
                                                    menuIsOpen={false}
                                                    options={Array []}
                                                    selectOption={[Function]}
                                                    selectProps={
                                                      Object {
                                                        "backspaceRemovesValue": true,
                                                        "blurInputOnSelect": true,
                                                        "cacheOptions": true,
                                                        "captureMenuScroll": false,
                                                        "className": "async-select col-md-8 pl-0 pr-0",
                                                        "closeMenuOnScroll": false,
                                                        "closeMenuOnSelect": true,
                                                        "components": Object {
                                                          "DropdownIndicator": [Function],
                                                          "IndicatorSeperator": [Function],
                                                        },
                                                        "controlShouldRenderValue": true,
                                                        "defaultOptions": false,
                                                        "escapeClearsValue": false,
                                                        "filterOption": null,
                                                        "formatGroupLabel": [Function],
                                                        "getOptionLabel": [Function],
                                                        "getOptionValue": [Function],
                                                        "inputValue": "",
                                                        "isClearable": true,
                                                        "isDisabled": false,
                                                        "isLoading": false,
                                                        "isMulti": false,
                                                        "isOptionDisabled": [Function],
                                                        "isRtl": false,
                                                        "isSearchable": true,
                                                        "loadingMessage": [Function],
                                                        "maxMenuHeight": 300,
                                                        "menuIsOpen": false,
                                                        "menuPlacement": "bottom",
                                                        "menuPosition": "absolute",
                                                        "menuShouldBlockScroll": false,
                                                        "menuShouldScrollIntoView": true,
                                                        "minMenuHeight": 140,
                                                        "name": "occupationPart",
                                                        "noOptionsMessage": [Function],
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onInputChange": [Function],
                                                        "onMenuClose": [Function],
                                                        "onMenuOpen": [Function],
                                                        "openMenuOnClick": true,
                                                        "openMenuOnFocus": false,
                                                        "options": Array [],
                                                        "pageSize": 5,
                                                        "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                        "placeholder": "Start typing...",
                                                        "screenReaderStatus": [Function],
                                                        "styles": Object {
                                                          "control": [Function],
                                                          "menu": [Function],
                                                        },
                                                        "tabIndex": "0",
                                                        "tabSelectsValue": true,
                                                        "value": "",
                                                      }
                                                    }
                                                    setValue={[Function]}
                                                    theme={
                                                      Object {
                                                        "borderRadius": 4,
                                                        "colors": Object {
                                                          "danger": "#DE350B",
                                                          "dangerLight": "#FFBDAD",
                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                          "primary": "#2684FF",
                                                          "primary25": "#DEEBFF",
                                                          "primary50": "#B2D4FF",
                                                          "primary75": "#4C9AFF",
                                                        },
                                                        "spacing": Object {
                                                          "baseUnit": 4,
                                                          "controlHeight": 38,
                                                          "menuGutter": 8,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="css-kuae11-control"
                                                      onMouseDown={[Function]}
                                                      onTouchEnd={[Function]}
                                                    >
                                                      <ValueContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "occupationPart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1hwfws3"
                                                        >
                                                          <Placeholder
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            key="placeholder"
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="css-151xaom-placeholder"
                                                            >
                                                              Start typing...
                                                            </div>
                                                          </Placeholder>
                                                          <Input
                                                            aria-autocomplete="list"
                                                            autoCapitalize="none"
                                                            autoComplete="off"
                                                            autoCorrect="off"
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            id="react-select-4-input"
                                                            innerRef={[Function]}
                                                            isDisabled={false}
                                                            isHidden={false}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            spellCheck="false"
                                                            tabIndex="0"
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          >
                                                            <div
                                                              className="css-1g6gooi"
                                                            >
                                                              <AutosizeInput
                                                                aria-autocomplete="list"
                                                                autoCapitalize="none"
                                                                autoComplete="off"
                                                                autoCorrect="off"
                                                                className=""
                                                                disabled={false}
                                                                id="react-select-4-input"
                                                                injectStyles={true}
                                                                inputRef={[Function]}
                                                                inputStyle={
                                                                  Object {
                                                                    "background": 0,
                                                                    "border": 0,
                                                                    "color": "inherit",
                                                                    "fontSize": "inherit",
                                                                    "label": "input",
                                                                    "opacity": 1,
                                                                    "outline": 0,
                                                                    "padding": 0,
                                                                  }
                                                                }
                                                                minWidth={1}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                spellCheck="false"
                                                                tabIndex="0"
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className=""
                                                                  style={
                                                                    Object {
                                                                      "display": "inline-block",
                                                                    }
                                                                  }
                                                                >
                                                                  <input
                                                                    aria-autocomplete="list"
                                                                    autoCapitalize="none"
                                                                    autoComplete="off"
                                                                    autoCorrect="off"
                                                                    disabled={false}
                                                                    id="react-select-4-input"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    spellCheck="false"
                                                                    style={
                                                                      Object {
                                                                        "background": 0,
                                                                        "border": 0,
                                                                        "boxSizing": "content-box",
                                                                        "color": "inherit",
                                                                        "fontSize": "inherit",
                                                                        "label": "input",
                                                                        "opacity": 1,
                                                                        "outline": 0,
                                                                        "padding": 0,
                                                                        "width": "2px",
                                                                      }
                                                                    }
                                                                    tabIndex="0"
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": 0,
                                                                        "left": 0,
                                                                        "overflow": "scroll",
                                                                        "position": "absolute",
                                                                        "top": 0,
                                                                        "visibility": "hidden",
                                                                        "whiteSpace": "pre",
                                                                      }
                                                                    }
                                                                  />
                                                                </div>
                                                              </AutosizeInput>
                                                            </div>
                                                          </Input>
                                                        </div>
                                                      </ValueContainer>
                                                      <IndicatorsContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "occupationPart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1wy0on6"
                                                        >
                                                          <IndicatorSeparator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="css-bgvzuu-indicatorSeparator"
                                                            />
                                                          </IndicatorSeparator>
                                                          <DropdownIndicator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            innerProps={
                                                              Object {
                                                                "aria-hidden": "true",
                                                                "onMouseDown": [Function],
                                                                "onTouchEnd": [Function],
                                                              }
                                                            }
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          />
                                                        </div>
                                                      </IndicatorsContainer>
                                                    </div>
                                                  </Control>
                                                  <input
                                                    name="occupationPart"
                                                    type="hidden"
                                                    value=""
                                                  />
                                                </div>
                                              </SelectContainer>
                                            </Select>
                                          </StateManager>
                                        </Async>
                                      </div>
                                    </HDAsyncSelect>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  >
                                    displaykey.Edgev10.Web.Api.Model.NotNull
                                  </div>
                                </Feedback>
                              </div>
                            </FormGroup>
                            <hr />
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.businessTypePart.businessTypePart.secondary-empl-business"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDAsyncSelect",
                                    }
                                  }
                                  cacheOptions={true}
                                  className="undefined "
                                  custom={true}
                                  id="secondary-empl-business"
                                  isInvalid={false}
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-industry-label",
                                      "text": "What industry is this?",
                                    }
                                  }
                                  loadOptions={[Function]}
                                  name="businessTypePart"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onInputChange={[Function]}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                  placeholder="Start typing..."
                                  selectSize="md-8"
                                  value=""
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "What industry is this?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    cacheOptions={true}
                                    className="undefined  custom"
                                    id="secondary-empl-business"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-industry-label",
                                        "text": "What industry is this?",
                                      }
                                    }
                                    loadOptions={[Function]}
                                    name="businessTypePart"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onInputChange={[Function]}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                    placeholder="Start typing..."
                                    selectSize="md-8"
                                    value=""
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "What industry is this?",
                                      }
                                    }
                                  >
                                    <HDAsyncSelect
                                      cacheOptions={true}
                                      className="undefined  custom"
                                      customClassName=""
                                      defaultOptions={false}
                                      defaultValue={null}
                                      displayValidationMessage={true}
                                      id="secondary-empl-business"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-industry-label",
                                          "text": "What industry is this?",
                                        }
                                      }
                                      loadOptions={[Function]}
                                      name="businessTypePart"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onInputChange={[Function]}
                                      options={null}
                                      path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                      placeholder="Start typing..."
                                      selectSize="md-8"
                                      value=""
                                    >
                                      <div
                                        className="undefined  custom "
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-industry-label"
                                          text="What industry is this?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-industry-label"
                                          >
                                            What industry is this?
                                          </h2>
                                        </HDLabelRefactor>
                                        <Async
                                          cacheOptions={true}
                                          className="async-select col-md-8 pl-0 pr-0"
                                          components={
                                            Object {
                                              "DropdownIndicator": [Function],
                                              "IndicatorSeperator": [Function],
                                            }
                                          }
                                          defaultOptions={false}
                                          filterOption={null}
                                          isClearable={true}
                                          loadOptions={[Function]}
                                          name="businessTypePart"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onInputChange={[Function]}
                                          path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                          placeholder="Start typing..."
                                          styles={
                                            Object {
                                              "control": [Function],
                                              "menu": [Function],
                                            }
                                          }
                                          value=""
                                        >
                                          <StateManager
                                            cacheOptions={true}
                                            className="async-select col-md-8 pl-0 pr-0"
                                            components={
                                              Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeperator": [Function],
                                              }
                                            }
                                            defaultInputValue=""
                                            defaultMenuIsOpen={false}
                                            defaultOptions={false}
                                            defaultValue={null}
                                            filterOption={null}
                                            isClearable={true}
                                            isLoading={false}
                                            name="businessTypePart"
                                            noOptionsMessage={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onInputChange={[Function]}
                                            options={Array []}
                                            path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                            placeholder="Start typing..."
                                            styles={
                                              Object {
                                                "control": [Function],
                                                "menu": [Function],
                                              }
                                            }
                                            value=""
                                          >
                                            <Select
                                              backspaceRemovesValue={true}
                                              blurInputOnSelect={true}
                                              cacheOptions={true}
                                              captureMenuScroll={false}
                                              className="async-select col-md-8 pl-0 pr-0"
                                              closeMenuOnScroll={false}
                                              closeMenuOnSelect={true}
                                              components={
                                                Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeperator": [Function],
                                                }
                                              }
                                              controlShouldRenderValue={true}
                                              defaultOptions={false}
                                              escapeClearsValue={false}
                                              filterOption={null}
                                              formatGroupLabel={[Function]}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              inputValue=""
                                              isClearable={true}
                                              isDisabled={false}
                                              isLoading={false}
                                              isMulti={false}
                                              isOptionDisabled={[Function]}
                                              isRtl={false}
                                              isSearchable={true}
                                              loadingMessage={[Function]}
                                              maxMenuHeight={300}
                                              menuIsOpen={false}
                                              menuPlacement="bottom"
                                              menuPosition="absolute"
                                              menuShouldBlockScroll={false}
                                              menuShouldScrollIntoView={true}
                                              minMenuHeight={140}
                                              name="businessTypePart"
                                              noOptionsMessage={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onInputChange={[Function]}
                                              onMenuClose={[Function]}
                                              onMenuOpen={[Function]}
                                              openMenuOnClick={true}
                                              openMenuOnFocus={false}
                                              options={Array []}
                                              pageSize={5}
                                              path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                              placeholder="Start typing..."
                                              screenReaderStatus={[Function]}
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "menu": [Function],
                                                }
                                              }
                                              tabIndex="0"
                                              tabSelectsValue={true}
                                              value=""
                                            >
                                              <SelectContainer
                                                className="async-select col-md-8 pl-0 pr-0"
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={false}
                                                innerProps={
                                                  Object {
                                                    "id": undefined,
                                                    "onKeyDown": [Function],
                                                  }
                                                }
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={Array []}
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cacheOptions": true,
                                                    "captureMenuScroll": false,
                                                    "className": "async-select col-md-8 pl-0 pr-0",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "IndicatorSeperator": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": false,
                                                    "escapeClearsValue": false,
                                                    "filterOption": null,
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputValue": "",
                                                    "isClearable": true,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "businessTypePart",
                                                    "noOptionsMessage": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [],
                                                    "pageSize": 5,
                                                    "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                    "placeholder": "Start typing...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "control": [Function],
                                                      "menu": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": "",
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <div
                                                  className="css-1pcexqc-container async-select col-md-8 pl-0 pr-0"
                                                  onKeyDown={[Function]}
                                                >
                                                  <Control
                                                    clearValue={[Function]}
                                                    cx={[Function]}
                                                    getStyles={[Function]}
                                                    getValue={[Function]}
                                                    hasValue={false}
                                                    innerProps={
                                                      Object {
                                                        "onMouseDown": [Function],
                                                        "onTouchEnd": [Function],
                                                      }
                                                    }
                                                    innerRef={[Function]}
                                                    isDisabled={false}
                                                    isFocused={false}
                                                    isMulti={false}
                                                    isRtl={false}
                                                    menuIsOpen={false}
                                                    options={Array []}
                                                    selectOption={[Function]}
                                                    selectProps={
                                                      Object {
                                                        "backspaceRemovesValue": true,
                                                        "blurInputOnSelect": true,
                                                        "cacheOptions": true,
                                                        "captureMenuScroll": false,
                                                        "className": "async-select col-md-8 pl-0 pr-0",
                                                        "closeMenuOnScroll": false,
                                                        "closeMenuOnSelect": true,
                                                        "components": Object {
                                                          "DropdownIndicator": [Function],
                                                          "IndicatorSeperator": [Function],
                                                        },
                                                        "controlShouldRenderValue": true,
                                                        "defaultOptions": false,
                                                        "escapeClearsValue": false,
                                                        "filterOption": null,
                                                        "formatGroupLabel": [Function],
                                                        "getOptionLabel": [Function],
                                                        "getOptionValue": [Function],
                                                        "inputValue": "",
                                                        "isClearable": true,
                                                        "isDisabled": false,
                                                        "isLoading": false,
                                                        "isMulti": false,
                                                        "isOptionDisabled": [Function],
                                                        "isRtl": false,
                                                        "isSearchable": true,
                                                        "loadingMessage": [Function],
                                                        "maxMenuHeight": 300,
                                                        "menuIsOpen": false,
                                                        "menuPlacement": "bottom",
                                                        "menuPosition": "absolute",
                                                        "menuShouldBlockScroll": false,
                                                        "menuShouldScrollIntoView": true,
                                                        "minMenuHeight": 140,
                                                        "name": "businessTypePart",
                                                        "noOptionsMessage": [Function],
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onInputChange": [Function],
                                                        "onMenuClose": [Function],
                                                        "onMenuOpen": [Function],
                                                        "openMenuOnClick": true,
                                                        "openMenuOnFocus": false,
                                                        "options": Array [],
                                                        "pageSize": 5,
                                                        "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                        "placeholder": "Start typing...",
                                                        "screenReaderStatus": [Function],
                                                        "styles": Object {
                                                          "control": [Function],
                                                          "menu": [Function],
                                                        },
                                                        "tabIndex": "0",
                                                        "tabSelectsValue": true,
                                                        "value": "",
                                                      }
                                                    }
                                                    setValue={[Function]}
                                                    theme={
                                                      Object {
                                                        "borderRadius": 4,
                                                        "colors": Object {
                                                          "danger": "#DE350B",
                                                          "dangerLight": "#FFBDAD",
                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                          "primary": "#2684FF",
                                                          "primary25": "#DEEBFF",
                                                          "primary50": "#B2D4FF",
                                                          "primary75": "#4C9AFF",
                                                        },
                                                        "spacing": Object {
                                                          "baseUnit": 4,
                                                          "controlHeight": 38,
                                                          "menuGutter": 8,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="css-kuae11-control"
                                                      onMouseDown={[Function]}
                                                      onTouchEnd={[Function]}
                                                    >
                                                      <ValueContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "businessTypePart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1hwfws3"
                                                        >
                                                          <Placeholder
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            key="placeholder"
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="css-151xaom-placeholder"
                                                            >
                                                              Start typing...
                                                            </div>
                                                          </Placeholder>
                                                          <Input
                                                            aria-autocomplete="list"
                                                            autoCapitalize="none"
                                                            autoComplete="off"
                                                            autoCorrect="off"
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            id="react-select-5-input"
                                                            innerRef={[Function]}
                                                            isDisabled={false}
                                                            isHidden={false}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            spellCheck="false"
                                                            tabIndex="0"
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          >
                                                            <div
                                                              className="css-1g6gooi"
                                                            >
                                                              <AutosizeInput
                                                                aria-autocomplete="list"
                                                                autoCapitalize="none"
                                                                autoComplete="off"
                                                                autoCorrect="off"
                                                                className=""
                                                                disabled={false}
                                                                id="react-select-5-input"
                                                                injectStyles={true}
                                                                inputRef={[Function]}
                                                                inputStyle={
                                                                  Object {
                                                                    "background": 0,
                                                                    "border": 0,
                                                                    "color": "inherit",
                                                                    "fontSize": "inherit",
                                                                    "label": "input",
                                                                    "opacity": 1,
                                                                    "outline": 0,
                                                                    "padding": 0,
                                                                  }
                                                                }
                                                                minWidth={1}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                spellCheck="false"
                                                                tabIndex="0"
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className=""
                                                                  style={
                                                                    Object {
                                                                      "display": "inline-block",
                                                                    }
                                                                  }
                                                                >
                                                                  <input
                                                                    aria-autocomplete="list"
                                                                    autoCapitalize="none"
                                                                    autoComplete="off"
                                                                    autoCorrect="off"
                                                                    disabled={false}
                                                                    id="react-select-5-input"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    spellCheck="false"
                                                                    style={
                                                                      Object {
                                                                        "background": 0,
                                                                        "border": 0,
                                                                        "boxSizing": "content-box",
                                                                        "color": "inherit",
                                                                        "fontSize": "inherit",
                                                                        "label": "input",
                                                                        "opacity": 1,
                                                                        "outline": 0,
                                                                        "padding": 0,
                                                                        "width": "2px",
                                                                      }
                                                                    }
                                                                    tabIndex="0"
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": 0,
                                                                        "left": 0,
                                                                        "overflow": "scroll",
                                                                        "position": "absolute",
                                                                        "top": 0,
                                                                        "visibility": "hidden",
                                                                        "whiteSpace": "pre",
                                                                      }
                                                                    }
                                                                  />
                                                                </div>
                                                              </AutosizeInput>
                                                            </div>
                                                          </Input>
                                                        </div>
                                                      </ValueContainer>
                                                      <IndicatorsContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "businessTypePart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1wy0on6"
                                                        >
                                                          <IndicatorSeparator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="css-bgvzuu-indicatorSeparator"
                                                            />
                                                          </IndicatorSeparator>
                                                          <DropdownIndicator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            innerProps={
                                                              Object {
                                                                "aria-hidden": "true",
                                                                "onMouseDown": [Function],
                                                                "onTouchEnd": [Function],
                                                              }
                                                            }
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          />
                                                        </div>
                                                      </IndicatorsContainer>
                                                    </div>
                                                  </Control>
                                                  <input
                                                    name="businessTypePart"
                                                    type="hidden"
                                                    value=""
                                                  />
                                                </div>
                                              </SelectContainer>
                                            </Select>
                                          </StateManager>
                                        </Async>
                                      </div>
                                    </HDAsyncSelect>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  >
                                    displaykey.Edgev10.Web.Api.Model.NotNull
                                  </div>
                                </Feedback>
                              </div>
                            </FormGroup>
                          </form>
                        </Form>
                      </Formik>
                    </HDForm>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Container>
      </HDSecondaryEmployementInfoPage>
    </Connect(HDSecondaryEmployementInfoPage)>
  </Provider>
</Component>
`;

exports[`<HDSecondaryEmployementInfoPage /> Click on Yes and display What is it question 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDSecondaryEmployementInfoPage)>
      <HDSecondaryEmployementInfoPage
        multiCarFlag={true}
        setNavigation={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": false,
                "allowPost": false,
                "allowSMS": false,
                "allowTelephone": false,
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
      >
        <Container
          className="secondary-empl-container"
          fluid={false}
        >
          <div
            className="secondary-empl-container container"
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <HDForm
                      className=""
                      initValues={Object {}}
                      onValidation={[Function]}
                      passedKey="default-key"
                      resetFormOnStart={false}
                      submissionVM={
                        Object {
                          "baseData": Object {
                            "accountHolder": Object {
                              "dateOfBirth": null,
                            },
                            "isExistingCustomer": false,
                            "isPostalDocument": false,
                            "jobType": "Submission",
                            "marketingContacts": Object {
                              "allowEmail": false,
                              "allowPost": false,
                              "allowSMS": false,
                              "allowTelephone": false,
                            },
                            "periodStatus": "Draft",
                            "policyAddress": Object {},
                            "producerCode": "Default",
                            "productCode": "PrivateCar_Ext",
                            "productName": "Private Car",
                            "termType": "Annual",
                          },
                          "lobData": Object {
                            "privateCar": Object {
                              "coverables": Object {
                                "addInterestTypeCategory": "PAVhcleAddlInterest",
                                "drivers": Array [
                                  Object {
                                    "claimsAndConvictions": Object {
                                      "claimsDetailsCollection": Array [],
                                      "convictionsCollection": Array [],
                                    },
                                    "licenceObtainedDate": null,
                                    "person": Object {
                                      "prefix": Object {},
                                    },
                                    "previousPoliciesInformation": Object {},
                                    "residingInUKSince": null,
                                    "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                  },
                                ],
                                "vehicleDrivers": Array [
                                  Object {},
                                ],
                                "vehicles": Array [
                                  Object {
                                    "isCarModified": "",
                                    "ncdProtection": Object {
                                      "drivingExperience": Object {},
                                    },
                                    "tracker": "",
                                    "vehicleModifications": Array [],
                                    "vehicleWorth": "",
                                  },
                                ],
                              },
                              "preQualQuestionSets": Array [],
                            },
                          },
                        }
                      }
                      validationSchema={
                        ObjectSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_defaultDefault": [Function],
                          "_deps": Array [],
                          "_excludedEdges": Array [],
                          "_exclusive": Object {},
                          "_mutate": undefined,
                          "_nodes": Array [
                            "businessTypePart",
                            "occupationPart",
                            "hasPartTimeEmp",
                          ],
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "object",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "fields": Object {
                            "businessTypePart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                            },
                            "hasPartTimeEmp": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                                "required": true,
                              },
                              "_mutate": undefined,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "tests": Array [
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "string",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                            },
                            "occupationPart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                            },
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                          "type": "object",
                        }
                      }
                    >
                      <Formik
                        initialTouched={Array []}
                        initialValues={
                          Object {
                            "businessTypePart": "",
                            "hasPartTimeEmp": "",
                            "occupationPart": "",
                          }
                        }
                        key="default-key"
                        validateOnMount={true}
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "businessTypePart",
                              "occupationPart",
                              "hasPartTimeEmp",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "businessTypePart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                              },
                              "hasPartTimeEmp": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                              },
                              "occupationPart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Form
                          className=""
                          inline={false}
                          noValidate={true}
                          onSubmit={[Function]}
                        >
                          <form
                            className=""
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp.hasPartTimeEmp.another-job-button-group"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDToggleButtonGroup",
                                    }
                                  }
                                  availableValues={
                                    Array [
                                      Object {
                                        "name": "Yes",
                                        "value": "true",
                                      },
                                      Object {
                                        "name": "No",
                                        "value": "false",
                                      },
                                    ]
                                  }
                                  btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                  className="undefined "
                                  custom={true}
                                  customClassName=""
                                  id="another-job-button-group"
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-another-job-label",
                                      "text": "Do you have another job?",
                                    }
                                  }
                                  name="hasPartTimeEmp"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                  value="true"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Do you have another job?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    availableValues={
                                      Array [
                                        Object {
                                          "name": "Yes",
                                          "value": "true",
                                        },
                                        Object {
                                          "name": "No",
                                          "value": "false",
                                        },
                                      ]
                                    }
                                    btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                    className="undefined  custom"
                                    customClassName=""
                                    id="another-job-button-group"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-another-job-label",
                                        "text": "Do you have another job?",
                                      }
                                    }
                                    name="hasPartTimeEmp"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                    value="true"
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "Do you have another job?",
                                      }
                                    }
                                  >
                                    <HDToggleButtonGroup
                                      availableValues={
                                        Array [
                                          Object {
                                            "name": "Yes",
                                            "value": "true",
                                          },
                                          Object {
                                            "name": "No",
                                            "value": "false",
                                          },
                                        ]
                                      }
                                      btnClassName=""
                                      btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                      className="undefined  custom"
                                      customClassName=""
                                      data={null}
                                      disabled={false}
                                      doReset={false}
                                      id="another-job-button-group"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-another-job-label",
                                          "text": "Do you have another job?",
                                        }
                                      }
                                      name="hasPartTimeEmp"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                      type="radio"
                                      value="true"
                                    >
                                      <div
                                        className=" undefined  custom"
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-another-job-label"
                                          text="Do you have another job?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-another-job-label"
                                          >
                                            Do you have another job?
                                          </h2>
                                        </HDLabelRefactor>
                                        <ForwardRef
                                          className="grid grid--col-2 grid--col-lg-3"
                                          name="hasPartTimeEmp"
                                          type="radio"
                                          value="true"
                                          vertical={false}
                                        >
                                          <ButtonGroup
                                            className="grid grid--col-2 grid--col-lg-3"
                                            role="group"
                                            toggle={true}
                                            vertical={false}
                                          >
                                            <div
                                              className="grid grid--col-2 grid--col-lg-3 btn-group btn-group-toggle"
                                              role="group"
                                            >
                                              <ToggleButton
                                                checked={true}
                                                className=""
                                                disabled={false}
                                                key=".$true"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="true"
                                                variant="default"
                                              >
                                                <Button
                                                  active={true}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn active btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={true}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="true"
                                                    />
                                                    <div>
                                                      <div>
                                                        Yes
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                              <ToggleButton
                                                checked={false}
                                                className=""
                                                disabled={false}
                                                key=".$false"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="false"
                                                variant="default"
                                              >
                                                <Button
                                                  active={false}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={false}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="false"
                                                    />
                                                    <div>
                                                      <div>
                                                        No
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                            </div>
                                          </ButtonGroup>
                                        </ForwardRef>
                                      </div>
                                    </HDToggleButtonGroup>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  />
                                </Feedback>
                              </div>
                            </FormGroup>
                            <hr />
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.occupationPart.occupationPart.secondary-empl-occupation"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDAsyncSelect",
                                    }
                                  }
                                  cacheOptions={true}
                                  className="undefined "
                                  custom={true}
                                  id="secondary-empl-occupation"
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-what-job-label",
                                      "text": "What is it?",
                                    }
                                  }
                                  loadOptions={[Function]}
                                  name="occupationPart"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onInputChange={[Function]}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                  placeholder="Start typing..."
                                  selectSize="md-8"
                                  value=""
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "What is it?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    cacheOptions={true}
                                    className="undefined  custom"
                                    id="secondary-empl-occupation"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-what-job-label",
                                        "text": "What is it?",
                                      }
                                    }
                                    loadOptions={[Function]}
                                    name="occupationPart"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onInputChange={[Function]}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                    placeholder="Start typing..."
                                    selectSize="md-8"
                                    value=""
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "What is it?",
                                      }
                                    }
                                  >
                                    <HDAsyncSelect
                                      cacheOptions={true}
                                      className="undefined  custom"
                                      customClassName=""
                                      defaultOptions={false}
                                      defaultValue={null}
                                      displayValidationMessage={true}
                                      id="secondary-empl-occupation"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-what-job-label",
                                          "text": "What is it?",
                                        }
                                      }
                                      loadOptions={[Function]}
                                      name="occupationPart"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onInputChange={[Function]}
                                      options={null}
                                      path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                      placeholder="Start typing..."
                                      selectSize="md-8"
                                      value=""
                                    >
                                      <div
                                        className="undefined  custom "
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-what-job-label"
                                          text="What is it?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-what-job-label"
                                          >
                                            What is it?
                                          </h2>
                                        </HDLabelRefactor>
                                        <Async
                                          cacheOptions={true}
                                          className="async-select col-md-8 pl-0 pr-0"
                                          components={
                                            Object {
                                              "DropdownIndicator": [Function],
                                              "IndicatorSeperator": [Function],
                                            }
                                          }
                                          defaultOptions={false}
                                          filterOption={null}
                                          isClearable={true}
                                          loadOptions={[Function]}
                                          name="occupationPart"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onInputChange={[Function]}
                                          path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                          placeholder="Start typing..."
                                          styles={
                                            Object {
                                              "control": [Function],
                                              "menu": [Function],
                                            }
                                          }
                                          value=""
                                        >
                                          <StateManager
                                            cacheOptions={true}
                                            className="async-select col-md-8 pl-0 pr-0"
                                            components={
                                              Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeperator": [Function],
                                              }
                                            }
                                            defaultInputValue=""
                                            defaultMenuIsOpen={false}
                                            defaultOptions={false}
                                            defaultValue={null}
                                            filterOption={null}
                                            isClearable={true}
                                            isLoading={false}
                                            name="occupationPart"
                                            noOptionsMessage={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onInputChange={[Function]}
                                            options={Array []}
                                            path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                            placeholder="Start typing..."
                                            styles={
                                              Object {
                                                "control": [Function],
                                                "menu": [Function],
                                              }
                                            }
                                            value=""
                                          >
                                            <Select
                                              backspaceRemovesValue={true}
                                              blurInputOnSelect={true}
                                              cacheOptions={true}
                                              captureMenuScroll={false}
                                              className="async-select col-md-8 pl-0 pr-0"
                                              closeMenuOnScroll={false}
                                              closeMenuOnSelect={true}
                                              components={
                                                Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeperator": [Function],
                                                }
                                              }
                                              controlShouldRenderValue={true}
                                              defaultOptions={false}
                                              escapeClearsValue={false}
                                              filterOption={null}
                                              formatGroupLabel={[Function]}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              inputValue=""
                                              isClearable={true}
                                              isDisabled={false}
                                              isLoading={false}
                                              isMulti={false}
                                              isOptionDisabled={[Function]}
                                              isRtl={false}
                                              isSearchable={true}
                                              loadingMessage={[Function]}
                                              maxMenuHeight={300}
                                              menuIsOpen={false}
                                              menuPlacement="bottom"
                                              menuPosition="absolute"
                                              menuShouldBlockScroll={false}
                                              menuShouldScrollIntoView={true}
                                              minMenuHeight={140}
                                              name="occupationPart"
                                              noOptionsMessage={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onInputChange={[Function]}
                                              onMenuClose={[Function]}
                                              onMenuOpen={[Function]}
                                              openMenuOnClick={true}
                                              openMenuOnFocus={false}
                                              options={Array []}
                                              pageSize={5}
                                              path="lobData.privateCar.coverables.drivers.children.0.occupationPart"
                                              placeholder="Start typing..."
                                              screenReaderStatus={[Function]}
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "menu": [Function],
                                                }
                                              }
                                              tabIndex="0"
                                              tabSelectsValue={true}
                                              value=""
                                            >
                                              <SelectContainer
                                                className="async-select col-md-8 pl-0 pr-0"
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={false}
                                                innerProps={
                                                  Object {
                                                    "id": undefined,
                                                    "onKeyDown": [Function],
                                                  }
                                                }
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={Array []}
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cacheOptions": true,
                                                    "captureMenuScroll": false,
                                                    "className": "async-select col-md-8 pl-0 pr-0",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "IndicatorSeperator": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": false,
                                                    "escapeClearsValue": false,
                                                    "filterOption": null,
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputValue": "",
                                                    "isClearable": true,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "occupationPart",
                                                    "noOptionsMessage": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [],
                                                    "pageSize": 5,
                                                    "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                    "placeholder": "Start typing...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "control": [Function],
                                                      "menu": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": "",
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <div
                                                  className="css-1pcexqc-container async-select col-md-8 pl-0 pr-0"
                                                  onKeyDown={[Function]}
                                                >
                                                  <Control
                                                    clearValue={[Function]}
                                                    cx={[Function]}
                                                    getStyles={[Function]}
                                                    getValue={[Function]}
                                                    hasValue={false}
                                                    innerProps={
                                                      Object {
                                                        "onMouseDown": [Function],
                                                        "onTouchEnd": [Function],
                                                      }
                                                    }
                                                    innerRef={[Function]}
                                                    isDisabled={false}
                                                    isFocused={false}
                                                    isMulti={false}
                                                    isRtl={false}
                                                    menuIsOpen={false}
                                                    options={Array []}
                                                    selectOption={[Function]}
                                                    selectProps={
                                                      Object {
                                                        "backspaceRemovesValue": true,
                                                        "blurInputOnSelect": true,
                                                        "cacheOptions": true,
                                                        "captureMenuScroll": false,
                                                        "className": "async-select col-md-8 pl-0 pr-0",
                                                        "closeMenuOnScroll": false,
                                                        "closeMenuOnSelect": true,
                                                        "components": Object {
                                                          "DropdownIndicator": [Function],
                                                          "IndicatorSeperator": [Function],
                                                        },
                                                        "controlShouldRenderValue": true,
                                                        "defaultOptions": false,
                                                        "escapeClearsValue": false,
                                                        "filterOption": null,
                                                        "formatGroupLabel": [Function],
                                                        "getOptionLabel": [Function],
                                                        "getOptionValue": [Function],
                                                        "inputValue": "",
                                                        "isClearable": true,
                                                        "isDisabled": false,
                                                        "isLoading": false,
                                                        "isMulti": false,
                                                        "isOptionDisabled": [Function],
                                                        "isRtl": false,
                                                        "isSearchable": true,
                                                        "loadingMessage": [Function],
                                                        "maxMenuHeight": 300,
                                                        "menuIsOpen": false,
                                                        "menuPlacement": "bottom",
                                                        "menuPosition": "absolute",
                                                        "menuShouldBlockScroll": false,
                                                        "menuShouldScrollIntoView": true,
                                                        "minMenuHeight": 140,
                                                        "name": "occupationPart",
                                                        "noOptionsMessage": [Function],
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onInputChange": [Function],
                                                        "onMenuClose": [Function],
                                                        "onMenuOpen": [Function],
                                                        "openMenuOnClick": true,
                                                        "openMenuOnFocus": false,
                                                        "options": Array [],
                                                        "pageSize": 5,
                                                        "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                        "placeholder": "Start typing...",
                                                        "screenReaderStatus": [Function],
                                                        "styles": Object {
                                                          "control": [Function],
                                                          "menu": [Function],
                                                        },
                                                        "tabIndex": "0",
                                                        "tabSelectsValue": true,
                                                        "value": "",
                                                      }
                                                    }
                                                    setValue={[Function]}
                                                    theme={
                                                      Object {
                                                        "borderRadius": 4,
                                                        "colors": Object {
                                                          "danger": "#DE350B",
                                                          "dangerLight": "#FFBDAD",
                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                          "primary": "#2684FF",
                                                          "primary25": "#DEEBFF",
                                                          "primary50": "#B2D4FF",
                                                          "primary75": "#4C9AFF",
                                                        },
                                                        "spacing": Object {
                                                          "baseUnit": 4,
                                                          "controlHeight": 38,
                                                          "menuGutter": 8,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="css-kuae11-control"
                                                      onMouseDown={[Function]}
                                                      onTouchEnd={[Function]}
                                                    >
                                                      <ValueContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "occupationPart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1hwfws3"
                                                        >
                                                          <Placeholder
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            key="placeholder"
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="css-151xaom-placeholder"
                                                            >
                                                              Start typing...
                                                            </div>
                                                          </Placeholder>
                                                          <Input
                                                            aria-autocomplete="list"
                                                            autoCapitalize="none"
                                                            autoComplete="off"
                                                            autoCorrect="off"
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            id="react-select-2-input"
                                                            innerRef={[Function]}
                                                            isDisabled={false}
                                                            isHidden={false}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            spellCheck="false"
                                                            tabIndex="0"
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          >
                                                            <div
                                                              className="css-1g6gooi"
                                                            >
                                                              <AutosizeInput
                                                                aria-autocomplete="list"
                                                                autoCapitalize="none"
                                                                autoComplete="off"
                                                                autoCorrect="off"
                                                                className=""
                                                                disabled={false}
                                                                id="react-select-2-input"
                                                                injectStyles={true}
                                                                inputRef={[Function]}
                                                                inputStyle={
                                                                  Object {
                                                                    "background": 0,
                                                                    "border": 0,
                                                                    "color": "inherit",
                                                                    "fontSize": "inherit",
                                                                    "label": "input",
                                                                    "opacity": 1,
                                                                    "outline": 0,
                                                                    "padding": 0,
                                                                  }
                                                                }
                                                                minWidth={1}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                spellCheck="false"
                                                                tabIndex="0"
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className=""
                                                                  style={
                                                                    Object {
                                                                      "display": "inline-block",
                                                                    }
                                                                  }
                                                                >
                                                                  <input
                                                                    aria-autocomplete="list"
                                                                    autoCapitalize="none"
                                                                    autoComplete="off"
                                                                    autoCorrect="off"
                                                                    disabled={false}
                                                                    id="react-select-2-input"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    spellCheck="false"
                                                                    style={
                                                                      Object {
                                                                        "background": 0,
                                                                        "border": 0,
                                                                        "boxSizing": "content-box",
                                                                        "color": "inherit",
                                                                        "fontSize": "inherit",
                                                                        "label": "input",
                                                                        "opacity": 1,
                                                                        "outline": 0,
                                                                        "padding": 0,
                                                                        "width": "2px",
                                                                      }
                                                                    }
                                                                    tabIndex="0"
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": 0,
                                                                        "left": 0,
                                                                        "overflow": "scroll",
                                                                        "position": "absolute",
                                                                        "top": 0,
                                                                        "visibility": "hidden",
                                                                        "whiteSpace": "pre",
                                                                      }
                                                                    }
                                                                  />
                                                                </div>
                                                              </AutosizeInput>
                                                            </div>
                                                          </Input>
                                                        </div>
                                                      </ValueContainer>
                                                      <IndicatorsContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "occupationPart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1wy0on6"
                                                        >
                                                          <IndicatorSeparator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="css-bgvzuu-indicatorSeparator"
                                                            />
                                                          </IndicatorSeparator>
                                                          <DropdownIndicator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            innerProps={
                                                              Object {
                                                                "aria-hidden": "true",
                                                                "onMouseDown": [Function],
                                                                "onTouchEnd": [Function],
                                                              }
                                                            }
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "occupationPart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          />
                                                        </div>
                                                      </IndicatorsContainer>
                                                    </div>
                                                  </Control>
                                                  <input
                                                    name="occupationPart"
                                                    type="hidden"
                                                    value=""
                                                  />
                                                </div>
                                              </SelectContainer>
                                            </Select>
                                          </StateManager>
                                        </Async>
                                      </div>
                                    </HDAsyncSelect>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  >
                                    displaykey.Edgev10.Web.Api.Model.NotNull
                                  </div>
                                </Feedback>
                              </div>
                            </FormGroup>
                            <hr />
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.businessTypePart.businessTypePart.secondary-empl-business"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDAsyncSelect",
                                    }
                                  }
                                  cacheOptions={true}
                                  className="undefined "
                                  custom={true}
                                  id="secondary-empl-business"
                                  isInvalid={false}
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-industry-label",
                                      "text": "What industry is this?",
                                    }
                                  }
                                  loadOptions={[Function]}
                                  name="businessTypePart"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onInputChange={[Function]}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                  placeholder="Start typing..."
                                  selectSize="md-8"
                                  value=""
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "What industry is this?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    cacheOptions={true}
                                    className="undefined  custom"
                                    id="secondary-empl-business"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-industry-label",
                                        "text": "What industry is this?",
                                      }
                                    }
                                    loadOptions={[Function]}
                                    name="businessTypePart"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onInputChange={[Function]}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                    placeholder="Start typing..."
                                    selectSize="md-8"
                                    value=""
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "What industry is this?",
                                      }
                                    }
                                  >
                                    <HDAsyncSelect
                                      cacheOptions={true}
                                      className="undefined  custom"
                                      customClassName=""
                                      defaultOptions={false}
                                      defaultValue={null}
                                      displayValidationMessage={true}
                                      id="secondary-empl-business"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-industry-label",
                                          "text": "What industry is this?",
                                        }
                                      }
                                      loadOptions={[Function]}
                                      name="businessTypePart"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onInputChange={[Function]}
                                      options={null}
                                      path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                      placeholder="Start typing..."
                                      selectSize="md-8"
                                      value=""
                                    >
                                      <div
                                        className="undefined  custom "
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-industry-label"
                                          text="What industry is this?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-industry-label"
                                          >
                                            What industry is this?
                                          </h2>
                                        </HDLabelRefactor>
                                        <Async
                                          cacheOptions={true}
                                          className="async-select col-md-8 pl-0 pr-0"
                                          components={
                                            Object {
                                              "DropdownIndicator": [Function],
                                              "IndicatorSeperator": [Function],
                                            }
                                          }
                                          defaultOptions={false}
                                          filterOption={null}
                                          isClearable={true}
                                          loadOptions={[Function]}
                                          name="businessTypePart"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onInputChange={[Function]}
                                          path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                          placeholder="Start typing..."
                                          styles={
                                            Object {
                                              "control": [Function],
                                              "menu": [Function],
                                            }
                                          }
                                          value=""
                                        >
                                          <StateManager
                                            cacheOptions={true}
                                            className="async-select col-md-8 pl-0 pr-0"
                                            components={
                                              Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeperator": [Function],
                                              }
                                            }
                                            defaultInputValue=""
                                            defaultMenuIsOpen={false}
                                            defaultOptions={false}
                                            defaultValue={null}
                                            filterOption={null}
                                            isClearable={true}
                                            isLoading={false}
                                            name="businessTypePart"
                                            noOptionsMessage={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onInputChange={[Function]}
                                            options={Array []}
                                            path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                            placeholder="Start typing..."
                                            styles={
                                              Object {
                                                "control": [Function],
                                                "menu": [Function],
                                              }
                                            }
                                            value=""
                                          >
                                            <Select
                                              backspaceRemovesValue={true}
                                              blurInputOnSelect={true}
                                              cacheOptions={true}
                                              captureMenuScroll={false}
                                              className="async-select col-md-8 pl-0 pr-0"
                                              closeMenuOnScroll={false}
                                              closeMenuOnSelect={true}
                                              components={
                                                Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeperator": [Function],
                                                }
                                              }
                                              controlShouldRenderValue={true}
                                              defaultOptions={false}
                                              escapeClearsValue={false}
                                              filterOption={null}
                                              formatGroupLabel={[Function]}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              inputValue=""
                                              isClearable={true}
                                              isDisabled={false}
                                              isLoading={false}
                                              isMulti={false}
                                              isOptionDisabled={[Function]}
                                              isRtl={false}
                                              isSearchable={true}
                                              loadingMessage={[Function]}
                                              maxMenuHeight={300}
                                              menuIsOpen={false}
                                              menuPlacement="bottom"
                                              menuPosition="absolute"
                                              menuShouldBlockScroll={false}
                                              menuShouldScrollIntoView={true}
                                              minMenuHeight={140}
                                              name="businessTypePart"
                                              noOptionsMessage={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onInputChange={[Function]}
                                              onMenuClose={[Function]}
                                              onMenuOpen={[Function]}
                                              openMenuOnClick={true}
                                              openMenuOnFocus={false}
                                              options={Array []}
                                              pageSize={5}
                                              path="lobData.privateCar.coverables.drivers.children.0.businessTypePart"
                                              placeholder="Start typing..."
                                              screenReaderStatus={[Function]}
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "menu": [Function],
                                                }
                                              }
                                              tabIndex="0"
                                              tabSelectsValue={true}
                                              value=""
                                            >
                                              <SelectContainer
                                                className="async-select col-md-8 pl-0 pr-0"
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={false}
                                                innerProps={
                                                  Object {
                                                    "id": undefined,
                                                    "onKeyDown": [Function],
                                                  }
                                                }
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={Array []}
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "cacheOptions": true,
                                                    "captureMenuScroll": false,
                                                    "className": "async-select col-md-8 pl-0 pr-0",
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "IndicatorSeperator": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "defaultOptions": false,
                                                    "escapeClearsValue": false,
                                                    "filterOption": null,
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "inputValue": "",
                                                    "isClearable": true,
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "bottom",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "name": "businessTypePart",
                                                    "noOptionsMessage": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [],
                                                    "pageSize": 5,
                                                    "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                    "placeholder": "Start typing...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "control": [Function],
                                                      "menu": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": "",
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <div
                                                  className="css-1pcexqc-container async-select col-md-8 pl-0 pr-0"
                                                  onKeyDown={[Function]}
                                                >
                                                  <Control
                                                    clearValue={[Function]}
                                                    cx={[Function]}
                                                    getStyles={[Function]}
                                                    getValue={[Function]}
                                                    hasValue={false}
                                                    innerProps={
                                                      Object {
                                                        "onMouseDown": [Function],
                                                        "onTouchEnd": [Function],
                                                      }
                                                    }
                                                    innerRef={[Function]}
                                                    isDisabled={false}
                                                    isFocused={false}
                                                    isMulti={false}
                                                    isRtl={false}
                                                    menuIsOpen={false}
                                                    options={Array []}
                                                    selectOption={[Function]}
                                                    selectProps={
                                                      Object {
                                                        "backspaceRemovesValue": true,
                                                        "blurInputOnSelect": true,
                                                        "cacheOptions": true,
                                                        "captureMenuScroll": false,
                                                        "className": "async-select col-md-8 pl-0 pr-0",
                                                        "closeMenuOnScroll": false,
                                                        "closeMenuOnSelect": true,
                                                        "components": Object {
                                                          "DropdownIndicator": [Function],
                                                          "IndicatorSeperator": [Function],
                                                        },
                                                        "controlShouldRenderValue": true,
                                                        "defaultOptions": false,
                                                        "escapeClearsValue": false,
                                                        "filterOption": null,
                                                        "formatGroupLabel": [Function],
                                                        "getOptionLabel": [Function],
                                                        "getOptionValue": [Function],
                                                        "inputValue": "",
                                                        "isClearable": true,
                                                        "isDisabled": false,
                                                        "isLoading": false,
                                                        "isMulti": false,
                                                        "isOptionDisabled": [Function],
                                                        "isRtl": false,
                                                        "isSearchable": true,
                                                        "loadingMessage": [Function],
                                                        "maxMenuHeight": 300,
                                                        "menuIsOpen": false,
                                                        "menuPlacement": "bottom",
                                                        "menuPosition": "absolute",
                                                        "menuShouldBlockScroll": false,
                                                        "menuShouldScrollIntoView": true,
                                                        "minMenuHeight": 140,
                                                        "name": "businessTypePart",
                                                        "noOptionsMessage": [Function],
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onInputChange": [Function],
                                                        "onMenuClose": [Function],
                                                        "onMenuOpen": [Function],
                                                        "openMenuOnClick": true,
                                                        "openMenuOnFocus": false,
                                                        "options": Array [],
                                                        "pageSize": 5,
                                                        "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                        "placeholder": "Start typing...",
                                                        "screenReaderStatus": [Function],
                                                        "styles": Object {
                                                          "control": [Function],
                                                          "menu": [Function],
                                                        },
                                                        "tabIndex": "0",
                                                        "tabSelectsValue": true,
                                                        "value": "",
                                                      }
                                                    }
                                                    setValue={[Function]}
                                                    theme={
                                                      Object {
                                                        "borderRadius": 4,
                                                        "colors": Object {
                                                          "danger": "#DE350B",
                                                          "dangerLight": "#FFBDAD",
                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                          "primary": "#2684FF",
                                                          "primary25": "#DEEBFF",
                                                          "primary50": "#B2D4FF",
                                                          "primary75": "#4C9AFF",
                                                        },
                                                        "spacing": Object {
                                                          "baseUnit": 4,
                                                          "controlHeight": 38,
                                                          "menuGutter": 8,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="css-kuae11-control"
                                                      onMouseDown={[Function]}
                                                      onTouchEnd={[Function]}
                                                    >
                                                      <ValueContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "businessTypePart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1hwfws3"
                                                        >
                                                          <Placeholder
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            key="placeholder"
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="css-151xaom-placeholder"
                                                            >
                                                              Start typing...
                                                            </div>
                                                          </Placeholder>
                                                          <Input
                                                            aria-autocomplete="list"
                                                            autoCapitalize="none"
                                                            autoComplete="off"
                                                            autoCorrect="off"
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            id="react-select-3-input"
                                                            innerRef={[Function]}
                                                            isDisabled={false}
                                                            isHidden={false}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            spellCheck="false"
                                                            tabIndex="0"
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          >
                                                            <div
                                                              className="css-1g6gooi"
                                                            >
                                                              <AutosizeInput
                                                                aria-autocomplete="list"
                                                                autoCapitalize="none"
                                                                autoComplete="off"
                                                                autoCorrect="off"
                                                                className=""
                                                                disabled={false}
                                                                id="react-select-3-input"
                                                                injectStyles={true}
                                                                inputRef={[Function]}
                                                                inputStyle={
                                                                  Object {
                                                                    "background": 0,
                                                                    "border": 0,
                                                                    "color": "inherit",
                                                                    "fontSize": "inherit",
                                                                    "label": "input",
                                                                    "opacity": 1,
                                                                    "outline": 0,
                                                                    "padding": 0,
                                                                  }
                                                                }
                                                                minWidth={1}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                spellCheck="false"
                                                                tabIndex="0"
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className=""
                                                                  style={
                                                                    Object {
                                                                      "display": "inline-block",
                                                                    }
                                                                  }
                                                                >
                                                                  <input
                                                                    aria-autocomplete="list"
                                                                    autoCapitalize="none"
                                                                    autoComplete="off"
                                                                    autoCorrect="off"
                                                                    disabled={false}
                                                                    id="react-select-3-input"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    spellCheck="false"
                                                                    style={
                                                                      Object {
                                                                        "background": 0,
                                                                        "border": 0,
                                                                        "boxSizing": "content-box",
                                                                        "color": "inherit",
                                                                        "fontSize": "inherit",
                                                                        "label": "input",
                                                                        "opacity": 1,
                                                                        "outline": 0,
                                                                        "padding": 0,
                                                                        "width": "2px",
                                                                      }
                                                                    }
                                                                    tabIndex="0"
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "height": 0,
                                                                        "left": 0,
                                                                        "overflow": "scroll",
                                                                        "position": "absolute",
                                                                        "top": 0,
                                                                        "visibility": "hidden",
                                                                        "whiteSpace": "pre",
                                                                      }
                                                                    }
                                                                  />
                                                                </div>
                                                              </AutosizeInput>
                                                            </div>
                                                          </Input>
                                                        </div>
                                                      </ValueContainer>
                                                      <IndicatorsContainer
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "cacheOptions": true,
                                                            "captureMenuScroll": false,
                                                            "className": "async-select col-md-8 pl-0 pr-0",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeperator": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "defaultOptions": false,
                                                            "escapeClearsValue": false,
                                                            "filterOption": null,
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "businessTypePart",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                            "placeholder": "Start typing...",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "control": [Function],
                                                              "menu": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "value": "",
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="css-1wy0on6"
                                                        >
                                                          <IndicatorSeparator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="css-bgvzuu-indicatorSeparator"
                                                            />
                                                          </IndicatorSeparator>
                                                          <DropdownIndicator
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            innerProps={
                                                              Object {
                                                                "aria-hidden": "true",
                                                                "onMouseDown": [Function],
                                                                "onTouchEnd": [Function],
                                                              }
                                                            }
                                                            isDisabled={false}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={Array []}
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "cacheOptions": true,
                                                                "captureMenuScroll": false,
                                                                "className": "async-select col-md-8 pl-0 pr-0",
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "DropdownIndicator": [Function],
                                                                  "IndicatorSeperator": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "defaultOptions": false,
                                                                "escapeClearsValue": false,
                                                                "filterOption": null,
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputValue": "",
                                                                "isClearable": true,
                                                                "isDisabled": false,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": 300,
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": "businessTypePart",
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [],
                                                                "pageSize": 5,
                                                                "path": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                                                                "placeholder": "Start typing...",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "menu": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          />
                                                        </div>
                                                      </IndicatorsContainer>
                                                    </div>
                                                  </Control>
                                                  <input
                                                    name="businessTypePart"
                                                    type="hidden"
                                                    value=""
                                                  />
                                                </div>
                                              </SelectContainer>
                                            </Select>
                                          </StateManager>
                                        </Async>
                                      </div>
                                    </HDAsyncSelect>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  >
                                    displaykey.Edgev10.Web.Api.Model.NotNull
                                  </div>
                                </Feedback>
                              </div>
                            </FormGroup>
                          </form>
                        </Form>
                      </Formik>
                    </HDForm>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Container>
      </HDSecondaryEmployementInfoPage>
    </Connect(HDSecondaryEmployementInfoPage)>
  </Provider>
</Component>
`;

exports[`<HDSecondaryEmployementInfoPage /> should render the component and match snapshot 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDSecondaryEmployementInfoPage)>
      <HDSecondaryEmployementInfoPage
        multiCarFlag={true}
        setNavigation={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": false,
                "allowPost": false,
                "allowSMS": false,
                "allowTelephone": false,
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
      >
        <Container
          className="secondary-empl-container"
          fluid={false}
        >
          <div
            className="secondary-empl-container container"
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <HDForm
                      className=""
                      initValues={Object {}}
                      onValidation={[Function]}
                      passedKey="default-key"
                      resetFormOnStart={false}
                      submissionVM={
                        Object {
                          "baseData": Object {
                            "accountHolder": Object {
                              "dateOfBirth": null,
                            },
                            "isExistingCustomer": false,
                            "isPostalDocument": false,
                            "jobType": "Submission",
                            "marketingContacts": Object {
                              "allowEmail": false,
                              "allowPost": false,
                              "allowSMS": false,
                              "allowTelephone": false,
                            },
                            "periodStatus": "Draft",
                            "policyAddress": Object {},
                            "producerCode": "Default",
                            "productCode": "PrivateCar_Ext",
                            "productName": "Private Car",
                            "termType": "Annual",
                          },
                          "lobData": Object {
                            "privateCar": Object {
                              "coverables": Object {
                                "addInterestTypeCategory": "PAVhcleAddlInterest",
                                "drivers": Array [
                                  Object {
                                    "claimsAndConvictions": Object {
                                      "claimsDetailsCollection": Array [],
                                      "convictionsCollection": Array [],
                                    },
                                    "licenceObtainedDate": null,
                                    "person": Object {
                                      "prefix": Object {},
                                    },
                                    "previousPoliciesInformation": Object {},
                                    "residingInUKSince": null,
                                    "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                  },
                                ],
                                "vehicleDrivers": Array [
                                  Object {},
                                ],
                                "vehicles": Array [
                                  Object {
                                    "isCarModified": "",
                                    "ncdProtection": Object {
                                      "drivingExperience": Object {},
                                    },
                                    "tracker": "",
                                    "vehicleModifications": Array [],
                                    "vehicleWorth": "",
                                  },
                                ],
                              },
                              "preQualQuestionSets": Array [],
                            },
                          },
                        }
                      }
                      validationSchema={
                        ObjectSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_defaultDefault": [Function],
                          "_deps": Array [],
                          "_excludedEdges": Array [],
                          "_exclusive": Object {},
                          "_mutate": undefined,
                          "_nodes": Array [
                            "businessTypePart",
                            "occupationPart",
                            "hasPartTimeEmp",
                          ],
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "object",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "fields": Object {
                            "businessTypePart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                            },
                            "hasPartTimeEmp": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                                "required": true,
                              },
                              "_mutate": undefined,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "tests": Array [
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "string",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                            },
                            "occupationPart": ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {
                                "VMValidation": false,
                              },
                              "_mutate": undefined,
                              "_nodes": Array [],
                              "_nullable": true,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {},
                              "tests": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                              "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                            },
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                          "type": "object",
                        }
                      }
                    >
                      <Formik
                        initialTouched={Array []}
                        initialValues={
                          Object {
                            "businessTypePart": "",
                            "hasPartTimeEmp": "",
                            "occupationPart": "",
                          }
                        }
                        key="default-key"
                        validateOnMount={true}
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "businessTypePart",
                              "occupationPart",
                              "hasPartTimeEmp",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "businessTypePart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.businessTypePart",
                              },
                              "hasPartTimeEmp": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp",
                              },
                              "occupationPart": ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_nodes": Array [],
                                "_nullable": true,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {},
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                                "vmPath": "lobData.privateCar.coverables.drivers.children.0.occupationPart",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Form
                          className=""
                          inline={false}
                          noValidate={true}
                          onSubmit={[Function]}
                        >
                          <form
                            className=""
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <FormGroup
                              key="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp.hasPartTimeEmp.another-job-button-group"
                            >
                              <div
                                className="form-group"
                              >
                                <FormControl
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "id": "default-id",
                                        "onBeforeOpen": null,
                                        "onBlur": null,
                                        "onCancel": null,
                                        "onChange": null,
                                        "onClick": null,
                                        "onConfirm": null,
                                        "onDelete": null,
                                        "onEdit": null,
                                        "onFocus": null,
                                        "onSelect": null,
                                        "webAnalyticsEvent": null,
                                      },
                                      "displayName": undefined,
                                      "propTypes": Object {
                                        "id": [Function],
                                        "onBeforeOpen": [Function],
                                        "onBlur": [Function],
                                        "onCancel": [Function],
                                        "onChange": [Function],
                                        "onClick": [Function],
                                        "onConfirm": [Function],
                                        "onDelete": [Function],
                                        "onEdit": [Function],
                                        "onFocus": [Function],
                                        "onSelect": [Function],
                                        "webAnalyticsEvent": [Function],
                                      },
                                      "render": [Function],
                                      "type": undefined,
                                      "typeName": "HDToggleButtonGroup",
                                    }
                                  }
                                  availableValues={
                                    Array [
                                      Object {
                                        "name": "Yes",
                                        "value": "true",
                                      },
                                      Object {
                                        "name": "No",
                                        "value": "false",
                                      },
                                    ]
                                  }
                                  btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                  className="undefined "
                                  custom={true}
                                  customClassName=""
                                  id="another-job-button-group"
                                  label={
                                    Object {
                                      "Tag": "h2",
                                      "id": "secondary-empl-another-job-label",
                                      "text": "Do you have another job?",
                                    }
                                  }
                                  name="hasPartTimeEmp"
                                  onBeforeOpen={null}
                                  onBlur={[Function]}
                                  onCancel={null}
                                  onChange={[Function]}
                                  onClick={null}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onSelect={null}
                                  path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                  value=""
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Do you have another job?",
                                    }
                                  }
                                >
                                  <ForwardRef
                                    availableValues={
                                      Array [
                                        Object {
                                          "name": "Yes",
                                          "value": "true",
                                        },
                                        Object {
                                          "name": "No",
                                          "value": "false",
                                        },
                                      ]
                                    }
                                    btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                    className="undefined  custom"
                                    customClassName=""
                                    id="another-job-button-group"
                                    label={
                                      Object {
                                        "Tag": "h2",
                                        "id": "secondary-empl-another-job-label",
                                        "text": "Do you have another job?",
                                      }
                                    }
                                    name="hasPartTimeEmp"
                                    onBeforeOpen={null}
                                    onBlur={[Function]}
                                    onCancel={null}
                                    onChange={[Function]}
                                    onClick={null}
                                    onConfirm={null}
                                    onDelete={null}
                                    onEdit={null}
                                    onFocus={null}
                                    onSelect={null}
                                    path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                    value=""
                                    webAnalyticsEvent={
                                      Object {
                                        "event_action": "Do you have another job?",
                                      }
                                    }
                                  >
                                    <HDToggleButtonGroup
                                      availableValues={
                                        Array [
                                          Object {
                                            "name": "Yes",
                                            "value": "true",
                                          },
                                          Object {
                                            "name": "No",
                                            "value": "false",
                                          },
                                        ]
                                      }
                                      btnClassName=""
                                      btnGroupClassName="grid grid--col-2 grid--col-lg-3"
                                      className="undefined  custom"
                                      customClassName=""
                                      data={null}
                                      disabled={false}
                                      doReset={false}
                                      id="another-job-button-group"
                                      label={
                                        Object {
                                          "Tag": "h2",
                                          "id": "secondary-empl-another-job-label",
                                          "text": "Do you have another job?",
                                        }
                                      }
                                      name="hasPartTimeEmp"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      path="lobData.privateCar.coverables.drivers.children.0.hasPartTimeEmp"
                                      type="radio"
                                      value=""
                                    >
                                      <div
                                        className=" undefined  custom"
                                      >
                                        <HDLabelRefactor
                                          Tag="h2"
                                          adjustImagePosition={true}
                                          className=""
                                          id="secondary-empl-another-job-label"
                                          text="Do you have another job?"
                                        >
                                          <h2
                                            className=""
                                            id="secondary-empl-another-job-label"
                                          >
                                            Do you have another job?
                                          </h2>
                                        </HDLabelRefactor>
                                        <ForwardRef
                                          className="grid grid--col-2 grid--col-lg-3"
                                          name="hasPartTimeEmp"
                                          type="radio"
                                          value=""
                                          vertical={false}
                                        >
                                          <ButtonGroup
                                            className="grid grid--col-2 grid--col-lg-3"
                                            role="group"
                                            toggle={true}
                                            vertical={false}
                                          >
                                            <div
                                              className="grid grid--col-2 grid--col-lg-3 btn-group btn-group-toggle"
                                              role="group"
                                            >
                                              <ToggleButton
                                                checked={false}
                                                className=""
                                                disabled={false}
                                                key=".$true"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="true"
                                                variant="default"
                                              >
                                                <Button
                                                  active={false}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={false}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="true"
                                                    />
                                                    <div>
                                                      <div>
                                                        Yes
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                              <ToggleButton
                                                checked={false}
                                                className=""
                                                disabled={false}
                                                key=".$false"
                                                name="hasPartTimeEmp"
                                                onChange={[Function]}
                                                type="radio"
                                                value="false"
                                                variant="default"
                                              >
                                                <Button
                                                  active={false}
                                                  as="label"
                                                  className=""
                                                  disabled={false}
                                                  variant="default"
                                                >
                                                  <label
                                                    className="btn btn-default"
                                                    disabled={false}
                                                  >
                                                    <input
                                                      autoComplete="off"
                                                      checked={false}
                                                      disabled={false}
                                                      name="hasPartTimeEmp"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="false"
                                                    />
                                                    <div>
                                                      <div>
                                                        No
                                                      </div>
                                                    </div>
                                                  </label>
                                                </Button>
                                              </ToggleButton>
                                            </div>
                                          </ButtonGroup>
                                        </ForwardRef>
                                      </div>
                                    </HDToggleButtonGroup>
                                  </ForwardRef>
                                </FormControl>
                                <Feedback
                                  type="invalid"
                                >
                                  <div
                                    className="invalid-feedback"
                                  >
                                    Sorry, you need to answer this question
                                  </div>
                                </Feedback>
                              </div>
                            </FormGroup>
                            <hr />
                          </form>
                        </Form>
                      </Formik>
                    </HDForm>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Container>
      </HDSecondaryEmployementInfoPage>
    </Connect(HDSecondaryEmployementInfoPage)>
  </Provider>
</Component>
`;
