// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HDVoluntaryExcessPopup /> should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <HDVoluntaryExcessPopup
    pageMetadata={
      Object {
        "page_name": "test",
        "page_type": "test",
        "sales_journey_type": "multi_car",
      }
    }
  >
    <ForwardRef
      id="popup-voluntary-excess"
      labelText="Your excess explained"
      onBeforeOpen={null}
      overlayButtonIcon={
        <InfoIcon
          color="#0085ff"
          height="27"
          width="27"
        />
      }
      webAnalyticsEvent={
        Object {
          "event_action": "Your excess explained",
        }
      }
      webAnalyticsView={
        Object {
          "page_name": "test",
          "page_section": "Your excess explained",
          "page_type": "test",
          "sales_journey_type": "multi_car",
        }
      }
    >
      <ForwardRef
        id="popup-voluntary-excess"
        labelText="Your excess explained"
        onBeforeOpen={[Function]}
        onBlur={null}
        onCancel={null}
        onChange={null}
        onClick={null}
        onConfirm={null}
        onDelete={null}
        onEdit={null}
        onFocus={null}
        onSelect={null}
        overlayButtonIcon={
          <InfoIcon
            color="#0085ff"
            height="27"
            width="27"
          />
        }
        webAnalyticsEvent={
          Object {
            "event_action": "Your excess explained",
          }
        }
      >
        <HDOverlayPopup
          cancelButton="Cancel"
          className=""
          closeOnSelect={false}
          confirmButton="Confirm"
          customStyle=""
          disabledConfirmButton={false}
          headerBar={null}
          hidden={false}
          hideOnConfirm={true}
          id="popup-voluntary-excess"
          labelText="Your excess explained"
          onBeforeClose={[Function]}
          onBeforeOpen={[Function]}
          onCancel={[Function]}
          onConfirm={[Function]}
          overlayButtonIcon={
            <InfoIcon
              color="#0085ff"
              height="27"
              width="27"
            />
          }
          overlayButtonsClassName=""
          showButtons={false}
        >
          <div
            className="hd-information-tooltip "
          >
            <div
              className="hd-overlay-btn "
              hidden={false}
              id="popup-voluntary-excess"
              onClick={[Function]}
            >
              <InfoIcon
                color="#0085ff"
                height="27"
                width="27"
              >
                <svg
                  fill="#0085ff"
                  height="27"
                  viewBox="0 0 40 40"
                  width="27"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    clipRule="evenodd"
                    d="M31.6667 20C31.6667 26.1856 26.1856 31.6667 20 31.6667C13.8144 31.6667 8.33333 26.1856 8.33333 20C8.33333 13.8144 13.8144 8.33333 20 8.33333C26.1856 8.33333 31.6667 13.8144 31.6667 20ZM34 20C34 27.732 27.732 34 20 34C12.268 34 6 27.732 6 20C6 12.268 12.268 6 20 6C27.732 6 34 12.268 34 20ZM21.4 14.4C21.4 15.1732 20.7732 15.8 20 15.8C19.2268 15.8 18.6 15.1732 18.6 14.4C18.6 13.6268 19.2268 13 20 13C20.7732 13 21.4 13.6268 21.4 14.4ZM21.1669 17.2V27H18.8336V17.2H21.1669Z"
                    fill="#0085ff"
                    fillRule="evenodd"
                  />
                </svg>
              </InfoIcon>
            </div>
          </div>
        </HDOverlayPopup>
      </ForwardRef>
    </ForwardRef>
  </HDVoluntaryExcessPopup>
</Provider>
`;

exports[`<HDVoluntaryExcessPopup /> should render correctly and match the snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <HDVoluntaryExcessPopup
    pageMetadata={
      Object {
        "page_name": "test",
        "page_type": "test",
        "sales_journey_type": "multi_car",
      }
    }
  >
    <ForwardRef
      id="popup-voluntary-excess"
      labelText="Your excess explained"
      onBeforeOpen={null}
      overlayButtonIcon={
        <InfoIcon
          color="#0085ff"
          height="27"
          width="27"
        />
      }
      webAnalyticsEvent={
        Object {
          "event_action": "Your excess explained",
        }
      }
      webAnalyticsView={
        Object {
          "page_name": "test",
          "page_section": "Your excess explained",
          "page_type": "test",
          "sales_journey_type": "multi_car",
        }
      }
    >
      <ForwardRef
        id="popup-voluntary-excess"
        labelText="Your excess explained"
        onBeforeOpen={[Function]}
        onBlur={null}
        onCancel={null}
        onChange={null}
        onClick={null}
        onConfirm={null}
        onDelete={null}
        onEdit={null}
        onFocus={null}
        onSelect={null}
        overlayButtonIcon={
          <InfoIcon
            color="#0085ff"
            height="27"
            width="27"
          />
        }
        webAnalyticsEvent={
          Object {
            "event_action": "Your excess explained",
          }
        }
      >
        <HDOverlayPopup
          cancelButton="Cancel"
          className=""
          closeOnSelect={false}
          confirmButton="Confirm"
          customStyle=""
          disabledConfirmButton={false}
          headerBar={null}
          hidden={false}
          hideOnConfirm={true}
          id="popup-voluntary-excess"
          labelText="Your excess explained"
          onBeforeClose={[Function]}
          onBeforeOpen={[Function]}
          onCancel={[Function]}
          onConfirm={[Function]}
          overlayButtonIcon={
            <InfoIcon
              color="#0085ff"
              height="27"
              width="27"
            />
          }
          overlayButtonsClassName=""
          showButtons={false}
        >
          <div
            className="hd-information-tooltip "
          >
            <div
              className="hd-overlay-btn "
              hidden={false}
              id="popup-voluntary-excess"
              onClick={[Function]}
            >
              <InfoIcon
                color="#0085ff"
                height="27"
                width="27"
              >
                <svg
                  fill="#0085ff"
                  height="27"
                  viewBox="0 0 40 40"
                  width="27"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    clipRule="evenodd"
                    d="M31.6667 20C31.6667 26.1856 26.1856 31.6667 20 31.6667C13.8144 31.6667 8.33333 26.1856 8.33333 20C8.33333 13.8144 13.8144 8.33333 20 8.33333C26.1856 8.33333 31.6667 13.8144 31.6667 20ZM34 20C34 27.732 27.732 34 20 34C12.268 34 6 27.732 6 20C6 12.268 12.268 6 20 6C27.732 6 34 12.268 34 20ZM21.4 14.4C21.4 15.1732 20.7732 15.8 20 15.8C19.2268 15.8 18.6 15.1732 18.6 14.4C18.6 13.6268 19.2268 13 20 13C20.7732 13 21.4 13.6268 21.4 14.4ZM21.1669 17.2V27H18.8336V17.2H21.1669Z"
                    fill="#0085ff"
                    fillRule="evenodd"
                  />
                </svg>
              </InfoIcon>
            </div>
          </div>
        </HDOverlayPopup>
      </ForwardRef>
    </ForwardRef>
  </HDVoluntaryExcessPopup>
</Provider>
`;
