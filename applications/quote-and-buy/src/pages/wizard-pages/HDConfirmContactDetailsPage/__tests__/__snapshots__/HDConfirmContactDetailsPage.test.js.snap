// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HDConfirmContactDetailsPage /> check email box 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDConfirmContactDetailsPage)
      pageMetadata={
        Object {
          "page_name": "ConfirmContactDetails",
        }
      }
      updateMarketingPreferencesData={
        Object {
          "marketingUpdatedObj": Object {
            "baseData": Object {
              "brandCode": "HD",
            },
            "quoteData": Object {
              "offeredQuotes": Object {
                "value": "",
              },
            },
          },
        }
      }
    >
      <HDConfirmContactDetailsPage
        clearMarketingPreference={
          [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
            ],
          }
        }
        customizeSubmissionVM={null}
        dispatch={[Function]}
        onGoBack={[Function]}
        onMarketingPreferencesSuccess={[Function]}
        pageMetadata={
          Object {
            "page_name": "ConfirmContactDetails",
          }
        }
        setOfferedQuotesDetails={[Function]}
        setSubmissionVM={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
                "emailAddress1": Object {
                  "value": "test@test.com",
                },
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": Object {
                  "value": true,
                },
                "allowPost": false,
                "allowSMS": false,
                "allowTelephone": false,
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
        toggleContinueElement={[Function]}
        updateEmailSaveProgress={[Function]}
        updateMarketingPreference={[MockFunction]}
      >
        <div
          className="confirm-contact-details__background"
        >
          <Container
            className="confirm-contact-details__container"
            fluid={false}
          >
            <div
              className="confirm-contact-details__container container"
            >
              <Row
                className="confirm-contact-details__main-row"
                noGutters={false}
              >
                <div
                  className="confirm-contact-details__main-row row"
                >
                  <Col
                    md={
                      Object {
                        "offset": 3,
                        "span": 7,
                      }
                    }
                    xs={
                      Object {
                        "offset": 0,
                        "span": 12,
                      }
                    }
                  >
                    <div
                      className="col-md-7 col-12 offset-md-3 offset-0"
                    >
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <BackNavigation
                                className="confirm-contact-details__back-button"
                                id="backNavMainWizard"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                              >
                                <ForwardRef
                                  className="go-back confirm-contact-details__back-button"
                                  id="backNavMain"
                                  label="Go back"
                                  name="go-back"
                                  onBeforeOpen={null}
                                  onBlur={null}
                                  onCancel={null}
                                  onChange={null}
                                  onClick={[Function]}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onKeyPress={[Function]}
                                  onSelect={null}
                                  variant="default"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Go back",
                                    }
                                  }
                                >
                                  <HDButtonRefactor
                                    className="go-back confirm-contact-details__back-button"
                                    disabled={false}
                                    fullWidth={false}
                                    id="backNavMain"
                                    label="Go back"
                                    name="go-back"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    size={null}
                                    type="button"
                                    variant="default"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      className="hd-btn hd-btn-default go-back confirm-contact-details__back-button"
                                      disabled={false}
                                      id="backNavMain"
                                      onClick={[Function]}
                                      onKeyPress={[Function]}
                                      size={null}
                                      type="button"
                                      variant="default"
                                    >
                                      <button
                                        className="hd-btn hd-btn-default go-back confirm-contact-details__back-button btn btn-default"
                                        disabled={false}
                                        id="backNavMain"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className="back-icon"
                                        >
                                          <_default>
                                            <svg
                                              height="14"
                                              viewBox="0 0 8 14"
                                              width="8"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M0.225564 6.49312C0.0845862 6.6422 -2.91944e-07 6.8211 -2.84124e-07 7C-2.75001e-07 7.20872 0.0845862 7.38761 0.225564 7.50688L5.69549 13.2913C5.83647 13.4404 6.00564 13.5 6.17481 13.5C6.37218 13.5 6.54135 13.4404 6.65414 13.2913L7.27444 12.6353C7.41541 12.5161 7.5 12.3372 7.5 12.1284C7.5 11.9495 7.44361 11.7706 7.30263 11.6216L2.93233 7L7.30263 2.37844C7.44361 2.25917 7.5 2.08028 7.5 1.87156C7.5 1.69266 7.41541 1.51376 7.27444 1.36468L6.65414 0.708715C6.54135 0.58945 6.37218 0.5 6.17481 0.5C6.00564 0.5 5.83647 0.58945 5.69549 0.708715L0.225564 6.49312Z"
                                                fill="#0069CC"
                                              />
                                            </svg>
                                          </_default>
                                        </span>
                                        Go back
                                      </button>
                                    </Button>
                                  </HDButtonRefactor>
                                </ForwardRef>
                              </BackNavigation>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <HDLabelRefactor
                                Tag="h2"
                                adjustImagePosition={true}
                                className="confirm-contact-details__header"
                                text="What contact details would you like to use for your account?"
                              >
                                <h2
                                  className="confirm-contact-details__header"
                                >
                                  What contact details would you like to use for your account?
                                </h2>
                              </HDLabelRefactor>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <HDForm
                        className=""
                        initValues={Object {}}
                        onValidation={[Function]}
                        passedKey="default-key"
                        resetFormOnStart={false}
                        submissionVM={
                          Object {
                            "baseData": Object {
                              "accountHolder": Object {
                                "dateOfBirth": null,
                                "emailAddress1": Object {
                                  "value": "test@test.com",
                                },
                              },
                              "isExistingCustomer": false,
                              "isPostalDocument": false,
                              "jobType": "Submission",
                              "marketingContacts": Object {
                                "allowEmail": Object {
                                  "value": true,
                                },
                                "allowPost": false,
                                "allowSMS": false,
                                "allowTelephone": false,
                              },
                              "periodStatus": "Draft",
                              "policyAddress": Object {},
                              "producerCode": "Default",
                              "productCode": "PrivateCar_Ext",
                              "productName": "Private Car",
                              "termType": "Annual",
                            },
                            "lobData": Object {
                              "privateCar": Object {
                                "coverables": Object {
                                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                                  "drivers": Array [
                                    Object {
                                      "claimsAndConvictions": Object {
                                        "claimsDetailsCollection": Array [],
                                        "convictionsCollection": Array [],
                                      },
                                      "licenceObtainedDate": null,
                                      "person": Object {
                                        "prefix": Object {},
                                      },
                                      "previousPoliciesInformation": Object {},
                                      "residingInUKSince": null,
                                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                    },
                                  ],
                                  "vehicleDrivers": Array [
                                    Object {},
                                  ],
                                  "vehicles": Array [
                                    Object {
                                      "isCarModified": "",
                                      "ncdProtection": Object {
                                        "drivingExperience": Object {},
                                      },
                                      "tracker": "",
                                      "vehicleModifications": Array [],
                                      "vehicleWorth": "",
                                    },
                                  ],
                                },
                                "preQualQuestionSets": Array [],
                              },
                            },
                          }
                        }
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "allowPost",
                              "allowSMS",
                              "allowTelephone",
                              "allowEmail",
                              "cellNumber",
                              "emailAddress1",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "allowEmail": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowEmail",
                              },
                              "allowPost": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowPost",
                              },
                              "allowSMS": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowSMS",
                              },
                              "allowTelephone": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowTelephone",
                              },
                              "cellNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "matches": false,
                                  "max": true,
                                  "min": true,
                                  "mobileNumber": false,
                                  "notMobileNumber": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.cellNumber",
                              },
                              "emailAddress1": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "blackList": false,
                                  "email": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.emailAddress1",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Formik
                          initialTouched={Array []}
                          initialValues={
                            Object {
                              "allowEmail": "",
                              "allowPost": "",
                              "allowSMS": "",
                              "allowTelephone": "",
                              "cellNumber": "",
                              "emailAddress1": "test@test.com",
                            }
                          }
                          key="default-key"
                          validateOnMount={true}
                          validationSchema={
                            ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {},
                              "_mutate": undefined,
                              "_nodes": Array [
                                "allowPost",
                                "allowSMS",
                                "allowTelephone",
                                "allowEmail",
                                "cellNumber",
                                "emailAddress1",
                              ],
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {
                                "allowEmail": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowEmail",
                                },
                                "allowPost": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowPost",
                                },
                                "allowSMS": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowSMS",
                                },
                                "allowTelephone": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowTelephone",
                                },
                                "cellNumber": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "matches": false,
                                    "max": true,
                                    "min": true,
                                    "mobileNumber": false,
                                    "notMobileNumber": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.cellNumber",
                                },
                                "emailAddress1": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "blackList": false,
                                    "email": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.emailAddress1",
                                },
                              },
                              "tests": Array [],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                            }
                          }
                        >
                          <Form
                            className=""
                            inline={false}
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <form
                              className=""
                              noValidate={true}
                              onSubmit={[Function]}
                            >
                              <Row
                                className="confirm-contact-details__form-field-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="email-info-overlay"
                                            labelText="Email address"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                Your email address is used to log in to the app and MyAccount. Once you set up a password you’ll have instant access to your policy 24/7, where you can manage your policy and any claims. 

 We’ll also use your email address to contact you if there have been important changes to your policy or our services. And we may sometimes email you for marketing reasons, unless you've opted out.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-email"
                                        text="Email address"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-email"
                                                >
                                                  Email address
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="email-info-overlay"
                                                  labelText="Email address"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="email-info-overlay"
                                                    labelText="Email address"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="email-info-overlay"
                                                      labelText="Email address"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="email-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.emailAddress1.emailAddress1.email-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="email-input"
                                            inputMode="email"
                                            name="emailAddress1"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.emailAddress1"
                                            placeholder="Please enter your email address"
                                            size="sm"
                                            tickIcon={false}
                                            value="test@test.com"
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Email address",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="email-input"
                                              inputMode="email"
                                              name="emailAddress1"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.emailAddress1"
                                              placeholder="Please enter your email address"
                                              tickIcon={false}
                                              value="test@test.com"
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Email address",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="email-input"
                                                inputMode="email"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength={null}
                                                name="emailAddress1"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.emailAddress1"
                                                placeholder="Please enter your email address"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type={null}
                                                value="test@test.com"
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="email-input"
                                                      inputMode="email"
                                                      maxLength={null}
                                                      name="emailAddress1"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.emailAddress1"
                                                      placeholder="Please enter your email address"
                                                      type={null}
                                                      value="test@test.com"
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="email-input"
                                                        inputMode="email"
                                                        maxLength={null}
                                                        name="emailAddress1"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.emailAddress1"
                                                        placeholder="Please enter your email address"
                                                        type={null}
                                                        value="test@test.com"
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, we don't recognise that. Please try again
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-4"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-4 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-email"
                                        id="email-info-card"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-email"
                                          id="email-info-card"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="mobile-number-info-overlay"
                                            labelText="Mobile"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                We’ll use your mobile number to contact you about things relating to your policy, such as texting you a reminder if your renewal’s due soon or you’ve missed a payment. 

 Your number won’t be used for marketing purposes, unless you’ve told us you’re happy for us to do so.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-mobile"
                                        text="Mobile number"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-mobile"
                                                >
                                                  Mobile number
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="mobile-number-info-overlay"
                                                  labelText="Mobile"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="mobile-number-info-overlay"
                                                    labelText="Mobile"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="mobile-number-info-overlay"
                                                      labelText="Mobile"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="mobile-number-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.cellNumber.cellNumber.mobile-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="mobile-input"
                                            inputMode="numeric"
                                            maxLength="11"
                                            name="cellNumber"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.cellNumber"
                                            placeholder="Please enter your mobile number"
                                            size="sm"
                                            tickIcon={false}
                                            type="phone"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Mobile number",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="mobile-input"
                                              inputMode="numeric"
                                              maxLength="11"
                                              name="cellNumber"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.cellNumber"
                                              placeholder="Please enter your mobile number"
                                              tickIcon={false}
                                              type="phone"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Mobile number",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="mobile-input"
                                                inputMode="numeric"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength="11"
                                                name="cellNumber"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.cellNumber"
                                                placeholder="Please enter your mobile number"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type="phone"
                                                value=""
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="mobile-input"
                                                      inputMode="numeric"
                                                      maxLength="11"
                                                      name="cellNumber"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.cellNumber"
                                                      placeholder="Please enter your mobile number"
                                                      type="phone"
                                                      value=""
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="mobile-input"
                                                        inputMode="numeric"
                                                        maxLength="11"
                                                        name="cellNumber"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.cellNumber"
                                                        placeholder="Please enter your mobile number"
                                                        type="phone"
                                                        value=""
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, you need to answer this question
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-5"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-5 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-mobile"
                                        id="confirm-contact-details"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-mobile"
                                          id="confirm-contact-details"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <hr />
                              <Row
                                className="confirm-contact-details__your-pref-lable-text"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="h2"
                                        adjustImagePosition={true}
                                        className=""
                                        size="lg"
                                        text="Your preferences"
                                      >
                                        <h2
                                          className=""
                                          size="lg"
                                        >
                                          Your preferences
                                        </h2>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__your-pref-lable-text-msg mb-1"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text-msg mb-1 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <p>
                                        We’d love to be able to let you know about any offers, services or products we think you might be interested in. You can change your mind at any time by updating your preferences in MyAccount.
                                      </p>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        text="What’s the best way to contact you?"
                                      >
                                        <p
                                          className="confirm-contact-details__label-text"
                                        >
                                          What’s the best way to contact you?
                                        </p>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__button-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__button-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowEmail.allowEmail.confirm-contact-details-email-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-email-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowEmail"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowEmail"
                                            text="Email"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-email-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowEmail"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowEmail"
                                              text="Email"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Email",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-email-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowEmail"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowEmail"
                                                text="Email"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowEmail"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowEmail"
                                                        role="group"
                                                        type="checkbox"
                                                      >
                                                        <ToggleButton
                                                          name="allowEmail"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowEmail"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <div>
                                                                <div>
                                                                  Email
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowTelephone.allowTelephone.confirm-contact-details-phone-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-phone-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowTelephone"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowTelephone"
                                            text="Phone"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Phone",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-phone-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowTelephone"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowTelephone"
                                              text="Phone"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Phone",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-phone-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowTelephone"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowTelephone"
                                                text="Phone"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowTelephone"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value=""
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowTelephone"
                                                        role="group"
                                                        type="checkbox"
                                                        value=""
                                                      >
                                                        <ToggleButton
                                                          checked=""
                                                          name="allowTelephone"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value=""
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowTelephone"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value=""
                                                              />
                                                              <div>
                                                                <div>
                                                                  Phone
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowSMS.allowSMS.confirm-contact-details-text-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-text-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowSMS"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowSMS"
                                            text="Text message"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Text message",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-text-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowSMS"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowSMS"
                                              text="Text message"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Text message",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-text-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowSMS"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowSMS"
                                                text="Text message"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowSMS"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value=""
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowSMS"
                                                        role="group"
                                                        type="checkbox"
                                                        value=""
                                                      >
                                                        <ToggleButton
                                                          checked=""
                                                          name="allowSMS"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value=""
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowSMS"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value=""
                                                              />
                                                              <div>
                                                                <div>
                                                                  Text message
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowPost.allowPost.confirm-contact-details-post-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-post-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowPost"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowPost"
                                            text="Post"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Post",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-post-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowPost"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowPost"
                                              text="Post"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Post",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-post-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowPost"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowPost"
                                                text="Post"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowPost"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value=""
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowPost"
                                                        role="group"
                                                        type="checkbox"
                                                        value=""
                                                      >
                                                        <ToggleButton
                                                          checked=""
                                                          name="allowPost"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value=""
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowPost"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value=""
                                                              />
                                                              <div>
                                                                <div>
                                                                  Post
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__form-field-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container row"
                                >
                                  <Col
                                    className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint"
                                  >
                                    <div
                                      className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-opt-out"
                                        id="confirm-contact-details-info-card-opt-out"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-opt-out"
                                          id="confirm-contact-details-info-card-opt-out"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                            </form>
                          </Form>
                        </Formik>
                      </HDForm>
                      <Row
                        className="confirm-contact-details__inner-navigation mb-5"
                        noGutters={false}
                      >
                        <div
                          className="confirm-contact-details__inner-navigation mb-5 row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <ForwardRef
                                disabled={true}
                                id="continue-to-payment-button"
                                label="Continue to payment"
                                onBeforeOpen={null}
                                onBlur={null}
                                onCancel={null}
                                onChange={null}
                                onClick={[Function]}
                                onConfirm={null}
                                onDelete={null}
                                onEdit={null}
                                onFocus={null}
                                onSelect={null}
                                size="lg"
                                webAnalyticsEvent={
                                  Object {
                                    "event_action": "Continue - Redirecting from ConfirmContactDetails",
                                  }
                                }
                              >
                                <HDButtonRefactor
                                  className=""
                                  disabled={true}
                                  fullWidth={false}
                                  id="continue-to-payment-button"
                                  label="Continue to payment"
                                  onClick={[Function]}
                                  onKeyPress={null}
                                  size="lg"
                                  type="button"
                                  variant="primary"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    className="hd-btn hd-btn-primary "
                                    disabled={true}
                                    id="continue-to-payment-button"
                                    onClick={[Function]}
                                    onKeyPress={null}
                                    size="lg"
                                    type="button"
                                    variant="primary"
                                  >
                                    <button
                                      className="hd-btn hd-btn-primary  btn btn-primary btn-lg"
                                      disabled={true}
                                      id="continue-to-payment-button"
                                      onClick={[Function]}
                                      onKeyPress={null}
                                      type="button"
                                    >
                                      Continue to payment
                                    </button>
                                  </Button>
                                </HDButtonRefactor>
                              </ForwardRef>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </Col>
                </div>
              </Row>
              <ForwardRef
                confirmLabel="Go back to the homepage"
                customStyle="customize-quote customize-quote-decline"
                hideCancelButton={true}
                hideClose={true}
                id="home-page-modal"
                onBeforeOpen={null}
                onConfirm={[Function]}
                show={false}
                webAnalyticsView={null}
              >
                <ForwardRef
                  confirmLabel="Go back to the homepage"
                  customStyle="customize-quote customize-quote-decline"
                  hideCancelButton={true}
                  hideClose={true}
                  id="home-page-modal"
                  onBeforeOpen={null}
                  onBlur={null}
                  onCancel={null}
                  onChange={null}
                  onClick={null}
                  onConfirm={[Function]}
                  onDelete={null}
                  onEdit={null}
                  onFocus={null}
                  onSelect={null}
                  show={false}
                  webAnalyticsEvent={null}
                  webAnalyticsView={null}
                >
                  <HDModal
                    cancelLabel="Cancel"
                    className=""
                    confirmLabel="Go back to the homepage"
                    customStyle="customize-quote customize-quote-decline"
                    headerText=""
                    hideCancelButton={true}
                    hideClose={true}
                    hideConfirmButton={false}
                    hideFooter={false}
                    id="home-page-modal"
                    onBeforeOpen={null}
                    onBlur={null}
                    onCancel={null}
                    onChange={null}
                    onClick={null}
                    onClose={[Function]}
                    onConfirm={[Function]}
                    onDelete={null}
                    onEdit={null}
                    onFocus={null}
                    onSelect={null}
                    show={false}
                    webAnalyticsEvent={null}
                    webAnalyticsView={null}
                  >
                    <Portal
                      containerInfo={
                        <div
                          id="portal-root"
                        >
                          
                          
                        </div>
                      }
                    />
                  </HDModal>
                </ForwardRef>
              </ForwardRef>
            </div>
          </Container>
        </div>
      </HDConfirmContactDetailsPage>
    </Connect(HDConfirmContactDetailsPage)>
  </Provider>
</Component>
`;

exports[`<HDConfirmContactDetailsPage /> check post box 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDConfirmContactDetailsPage)
      pageMetadata={
        Object {
          "page_name": "ConfirmContactDetails",
        }
      }
      updateMarketingPreferencesData={
        Object {
          "marketingUpdatedObj": Object {
            "baseData": Object {
              "brandCode": "HD",
            },
            "quoteData": Object {
              "offeredQuotes": Object {
                "value": "",
              },
            },
          },
        }
      }
    >
      <HDConfirmContactDetailsPage
        clearMarketingPreference={
          [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
            ],
          }
        }
        customizeSubmissionVM={null}
        dispatch={[Function]}
        onGoBack={[Function]}
        onMarketingPreferencesSuccess={[Function]}
        pageMetadata={
          Object {
            "page_name": "ConfirmContactDetails",
          }
        }
        setOfferedQuotesDetails={[Function]}
        setSubmissionVM={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
                "emailAddress1": Object {
                  "value": "test@test.com",
                },
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": Object {
                  "value": true,
                },
                "allowPost": false,
                "allowSMS": false,
                "allowTelephone": Object {
                  "value": true,
                },
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
        toggleContinueElement={[Function]}
        updateEmailSaveProgress={[Function]}
        updateMarketingPreference={[MockFunction]}
      >
        <div
          className="confirm-contact-details__background"
        >
          <Container
            className="confirm-contact-details__container"
            fluid={false}
          >
            <div
              className="confirm-contact-details__container container"
            >
              <Row
                className="confirm-contact-details__main-row"
                noGutters={false}
              >
                <div
                  className="confirm-contact-details__main-row row"
                >
                  <Col
                    md={
                      Object {
                        "offset": 3,
                        "span": 7,
                      }
                    }
                    xs={
                      Object {
                        "offset": 0,
                        "span": 12,
                      }
                    }
                  >
                    <div
                      className="col-md-7 col-12 offset-md-3 offset-0"
                    >
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <BackNavigation
                                className="confirm-contact-details__back-button"
                                id="backNavMainWizard"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                              >
                                <ForwardRef
                                  className="go-back confirm-contact-details__back-button"
                                  id="backNavMain"
                                  label="Go back"
                                  name="go-back"
                                  onBeforeOpen={null}
                                  onBlur={null}
                                  onCancel={null}
                                  onChange={null}
                                  onClick={[Function]}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onKeyPress={[Function]}
                                  onSelect={null}
                                  variant="default"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Go back",
                                    }
                                  }
                                >
                                  <HDButtonRefactor
                                    className="go-back confirm-contact-details__back-button"
                                    disabled={false}
                                    fullWidth={false}
                                    id="backNavMain"
                                    label="Go back"
                                    name="go-back"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    size={null}
                                    type="button"
                                    variant="default"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      className="hd-btn hd-btn-default go-back confirm-contact-details__back-button"
                                      disabled={false}
                                      id="backNavMain"
                                      onClick={[Function]}
                                      onKeyPress={[Function]}
                                      size={null}
                                      type="button"
                                      variant="default"
                                    >
                                      <button
                                        className="hd-btn hd-btn-default go-back confirm-contact-details__back-button btn btn-default"
                                        disabled={false}
                                        id="backNavMain"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className="back-icon"
                                        >
                                          <_default>
                                            <svg
                                              height="14"
                                              viewBox="0 0 8 14"
                                              width="8"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M0.225564 6.49312C0.0845862 6.6422 -2.91944e-07 6.8211 -2.84124e-07 7C-2.75001e-07 7.20872 0.0845862 7.38761 0.225564 7.50688L5.69549 13.2913C5.83647 13.4404 6.00564 13.5 6.17481 13.5C6.37218 13.5 6.54135 13.4404 6.65414 13.2913L7.27444 12.6353C7.41541 12.5161 7.5 12.3372 7.5 12.1284C7.5 11.9495 7.44361 11.7706 7.30263 11.6216L2.93233 7L7.30263 2.37844C7.44361 2.25917 7.5 2.08028 7.5 1.87156C7.5 1.69266 7.41541 1.51376 7.27444 1.36468L6.65414 0.708715C6.54135 0.58945 6.37218 0.5 6.17481 0.5C6.00564 0.5 5.83647 0.58945 5.69549 0.708715L0.225564 6.49312Z"
                                                fill="#0069CC"
                                              />
                                            </svg>
                                          </_default>
                                        </span>
                                        Go back
                                      </button>
                                    </Button>
                                  </HDButtonRefactor>
                                </ForwardRef>
                              </BackNavigation>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <HDLabelRefactor
                                Tag="h2"
                                adjustImagePosition={true}
                                className="confirm-contact-details__header"
                                text="What contact details would you like to use for your account?"
                              >
                                <h2
                                  className="confirm-contact-details__header"
                                >
                                  What contact details would you like to use for your account?
                                </h2>
                              </HDLabelRefactor>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <HDForm
                        className=""
                        initValues={Object {}}
                        onValidation={[Function]}
                        passedKey="default-key"
                        resetFormOnStart={false}
                        submissionVM={
                          Object {
                            "baseData": Object {
                              "accountHolder": Object {
                                "dateOfBirth": null,
                                "emailAddress1": Object {
                                  "value": "test@test.com",
                                },
                              },
                              "isExistingCustomer": false,
                              "isPostalDocument": false,
                              "jobType": "Submission",
                              "marketingContacts": Object {
                                "allowEmail": Object {
                                  "value": true,
                                },
                                "allowPost": false,
                                "allowSMS": false,
                                "allowTelephone": Object {
                                  "value": true,
                                },
                              },
                              "periodStatus": "Draft",
                              "policyAddress": Object {},
                              "producerCode": "Default",
                              "productCode": "PrivateCar_Ext",
                              "productName": "Private Car",
                              "termType": "Annual",
                            },
                            "lobData": Object {
                              "privateCar": Object {
                                "coverables": Object {
                                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                                  "drivers": Array [
                                    Object {
                                      "claimsAndConvictions": Object {
                                        "claimsDetailsCollection": Array [],
                                        "convictionsCollection": Array [],
                                      },
                                      "licenceObtainedDate": null,
                                      "person": Object {
                                        "prefix": Object {},
                                      },
                                      "previousPoliciesInformation": Object {},
                                      "residingInUKSince": null,
                                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                    },
                                  ],
                                  "vehicleDrivers": Array [
                                    Object {},
                                  ],
                                  "vehicles": Array [
                                    Object {
                                      "isCarModified": "",
                                      "ncdProtection": Object {
                                        "drivingExperience": Object {},
                                      },
                                      "tracker": "",
                                      "vehicleModifications": Array [],
                                      "vehicleWorth": "",
                                    },
                                  ],
                                },
                                "preQualQuestionSets": Array [],
                              },
                            },
                          }
                        }
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "allowPost",
                              "allowSMS",
                              "allowTelephone",
                              "allowEmail",
                              "cellNumber",
                              "emailAddress1",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "allowEmail": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowEmail",
                              },
                              "allowPost": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowPost",
                              },
                              "allowSMS": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowSMS",
                              },
                              "allowTelephone": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowTelephone",
                              },
                              "cellNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "matches": false,
                                  "max": true,
                                  "min": true,
                                  "mobileNumber": false,
                                  "notMobileNumber": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.cellNumber",
                              },
                              "emailAddress1": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "blackList": false,
                                  "email": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.emailAddress1",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Formik
                          initialTouched={Array []}
                          initialValues={
                            Object {
                              "allowEmail": true,
                              "allowPost": "",
                              "allowSMS": "",
                              "allowTelephone": "",
                              "cellNumber": "",
                              "emailAddress1": "test@test.com",
                            }
                          }
                          key="default-key"
                          validateOnMount={true}
                          validationSchema={
                            ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {},
                              "_mutate": undefined,
                              "_nodes": Array [
                                "allowPost",
                                "allowSMS",
                                "allowTelephone",
                                "allowEmail",
                                "cellNumber",
                                "emailAddress1",
                              ],
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {
                                "allowEmail": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowEmail",
                                },
                                "allowPost": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowPost",
                                },
                                "allowSMS": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowSMS",
                                },
                                "allowTelephone": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowTelephone",
                                },
                                "cellNumber": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "matches": false,
                                    "max": true,
                                    "min": true,
                                    "mobileNumber": false,
                                    "notMobileNumber": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.cellNumber",
                                },
                                "emailAddress1": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "blackList": false,
                                    "email": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.emailAddress1",
                                },
                              },
                              "tests": Array [],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                            }
                          }
                        >
                          <Form
                            className=""
                            inline={false}
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <form
                              className=""
                              noValidate={true}
                              onSubmit={[Function]}
                            >
                              <Row
                                className="confirm-contact-details__form-field-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="email-info-overlay"
                                            labelText="Email address"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                Your email address is used to log in to the app and MyAccount. Once you set up a password you’ll have instant access to your policy 24/7, where you can manage your policy and any claims. 

 We’ll also use your email address to contact you if there have been important changes to your policy or our services. And we may sometimes email you for marketing reasons, unless you've opted out.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-email"
                                        text="Email address"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-email"
                                                >
                                                  Email address
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="email-info-overlay"
                                                  labelText="Email address"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="email-info-overlay"
                                                    labelText="Email address"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="email-info-overlay"
                                                      labelText="Email address"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="email-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.emailAddress1.emailAddress1.email-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="email-input"
                                            inputMode="email"
                                            name="emailAddress1"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.emailAddress1"
                                            placeholder="Please enter your email address"
                                            size="sm"
                                            tickIcon={false}
                                            value="test@test.com"
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Email address",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="email-input"
                                              inputMode="email"
                                              name="emailAddress1"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.emailAddress1"
                                              placeholder="Please enter your email address"
                                              tickIcon={false}
                                              value="test@test.com"
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Email address",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="email-input"
                                                inputMode="email"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength={null}
                                                name="emailAddress1"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.emailAddress1"
                                                placeholder="Please enter your email address"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type={null}
                                                value="test@test.com"
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="email-input"
                                                      inputMode="email"
                                                      maxLength={null}
                                                      name="emailAddress1"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.emailAddress1"
                                                      placeholder="Please enter your email address"
                                                      type={null}
                                                      value="test@test.com"
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="email-input"
                                                        inputMode="email"
                                                        maxLength={null}
                                                        name="emailAddress1"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.emailAddress1"
                                                        placeholder="Please enter your email address"
                                                        type={null}
                                                        value="test@test.com"
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, we don't recognise that. Please try again
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-4"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-4 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-email"
                                        id="email-info-card"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-email"
                                          id="email-info-card"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="mobile-number-info-overlay"
                                            labelText="Mobile"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                We’ll use your mobile number to contact you about things relating to your policy, such as texting you a reminder if your renewal’s due soon or you’ve missed a payment. 

 Your number won’t be used for marketing purposes, unless you’ve told us you’re happy for us to do so.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-mobile"
                                        text="Mobile number"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-mobile"
                                                >
                                                  Mobile number
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="mobile-number-info-overlay"
                                                  labelText="Mobile"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="mobile-number-info-overlay"
                                                    labelText="Mobile"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="mobile-number-info-overlay"
                                                      labelText="Mobile"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="mobile-number-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.cellNumber.cellNumber.mobile-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="mobile-input"
                                            inputMode="numeric"
                                            maxLength="11"
                                            name="cellNumber"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.cellNumber"
                                            placeholder="Please enter your mobile number"
                                            size="sm"
                                            tickIcon={false}
                                            type="phone"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Mobile number",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="mobile-input"
                                              inputMode="numeric"
                                              maxLength="11"
                                              name="cellNumber"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.cellNumber"
                                              placeholder="Please enter your mobile number"
                                              tickIcon={false}
                                              type="phone"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Mobile number",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="mobile-input"
                                                inputMode="numeric"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength="11"
                                                name="cellNumber"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.cellNumber"
                                                placeholder="Please enter your mobile number"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type="phone"
                                                value=""
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="mobile-input"
                                                      inputMode="numeric"
                                                      maxLength="11"
                                                      name="cellNumber"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.cellNumber"
                                                      placeholder="Please enter your mobile number"
                                                      type="phone"
                                                      value=""
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="mobile-input"
                                                        inputMode="numeric"
                                                        maxLength="11"
                                                        name="cellNumber"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.cellNumber"
                                                        placeholder="Please enter your mobile number"
                                                        type="phone"
                                                        value=""
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, you need to answer this question
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-5"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-5 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-mobile"
                                        id="confirm-contact-details"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-mobile"
                                          id="confirm-contact-details"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <hr />
                              <Row
                                className="confirm-contact-details__your-pref-lable-text"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="h2"
                                        adjustImagePosition={true}
                                        className=""
                                        size="lg"
                                        text="Your preferences"
                                      >
                                        <h2
                                          className=""
                                          size="lg"
                                        >
                                          Your preferences
                                        </h2>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__your-pref-lable-text-msg mb-1"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text-msg mb-1 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <p>
                                        We’d love to be able to let you know about any offers, services or products we think you might be interested in. You can change your mind at any time by updating your preferences in MyAccount.
                                      </p>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        text="What’s the best way to contact you?"
                                      >
                                        <p
                                          className="confirm-contact-details__label-text"
                                        >
                                          What’s the best way to contact you?
                                        </p>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__button-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__button-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowEmail.allowEmail.confirm-contact-details-email-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-email-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowEmail"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowEmail"
                                            text="Email"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-email-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowEmail"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowEmail"
                                              text="Email"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Email",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-email-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowEmail"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowEmail"
                                                text="Email"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowEmail"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowEmail"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowEmail"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowEmail"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Email
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowTelephone.allowTelephone.confirm-contact-details-phone-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-phone-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowTelephone"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowTelephone"
                                            text="Phone"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Phone",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-phone-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowTelephone"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowTelephone"
                                              text="Phone"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Phone",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-phone-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowTelephone"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowTelephone"
                                                text="Phone"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowTelephone"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowTelephone"
                                                        role="group"
                                                        type="checkbox"
                                                      >
                                                        <ToggleButton
                                                          name="allowTelephone"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowTelephone"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <div>
                                                                <div>
                                                                  Phone
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowSMS.allowSMS.confirm-contact-details-text-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-text-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowSMS"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowSMS"
                                            text="Text message"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Text message",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-text-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowSMS"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowSMS"
                                              text="Text message"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Text message",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-text-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowSMS"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowSMS"
                                                text="Text message"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowSMS"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value=""
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowSMS"
                                                        role="group"
                                                        type="checkbox"
                                                        value=""
                                                      >
                                                        <ToggleButton
                                                          checked=""
                                                          name="allowSMS"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value=""
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowSMS"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value=""
                                                              />
                                                              <div>
                                                                <div>
                                                                  Text message
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowPost.allowPost.confirm-contact-details-post-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-post-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowPost"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowPost"
                                            text="Post"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Post",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-post-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowPost"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowPost"
                                              text="Post"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Post",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-post-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowPost"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowPost"
                                                text="Post"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowPost"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value=""
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowPost"
                                                        role="group"
                                                        type="checkbox"
                                                        value=""
                                                      >
                                                        <ToggleButton
                                                          checked=""
                                                          name="allowPost"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value=""
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowPost"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value=""
                                                              />
                                                              <div>
                                                                <div>
                                                                  Post
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__form-field-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container row"
                                >
                                  <Col
                                    className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint"
                                  >
                                    <div
                                      className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-opt-out"
                                        id="confirm-contact-details-info-card-opt-out"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-opt-out"
                                          id="confirm-contact-details-info-card-opt-out"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                            </form>
                          </Form>
                        </Formik>
                      </HDForm>
                      <Row
                        className="confirm-contact-details__inner-navigation mb-5"
                        noGutters={false}
                      >
                        <div
                          className="confirm-contact-details__inner-navigation mb-5 row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <ForwardRef
                                disabled={true}
                                id="continue-to-payment-button"
                                label="Continue to payment"
                                onBeforeOpen={null}
                                onBlur={null}
                                onCancel={null}
                                onChange={null}
                                onClick={[Function]}
                                onConfirm={null}
                                onDelete={null}
                                onEdit={null}
                                onFocus={null}
                                onSelect={null}
                                size="lg"
                                webAnalyticsEvent={
                                  Object {
                                    "event_action": "Continue - Redirecting from ConfirmContactDetails",
                                  }
                                }
                              >
                                <HDButtonRefactor
                                  className=""
                                  disabled={true}
                                  fullWidth={false}
                                  id="continue-to-payment-button"
                                  label="Continue to payment"
                                  onClick={[Function]}
                                  onKeyPress={null}
                                  size="lg"
                                  type="button"
                                  variant="primary"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    className="hd-btn hd-btn-primary "
                                    disabled={true}
                                    id="continue-to-payment-button"
                                    onClick={[Function]}
                                    onKeyPress={null}
                                    size="lg"
                                    type="button"
                                    variant="primary"
                                  >
                                    <button
                                      className="hd-btn hd-btn-primary  btn btn-primary btn-lg"
                                      disabled={true}
                                      id="continue-to-payment-button"
                                      onClick={[Function]}
                                      onKeyPress={null}
                                      type="button"
                                    >
                                      Continue to payment
                                    </button>
                                  </Button>
                                </HDButtonRefactor>
                              </ForwardRef>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </Col>
                </div>
              </Row>
              <ForwardRef
                confirmLabel="Go back to the homepage"
                customStyle="customize-quote customize-quote-decline"
                hideCancelButton={true}
                hideClose={true}
                id="home-page-modal"
                onBeforeOpen={null}
                onConfirm={[Function]}
                show={false}
                webAnalyticsView={null}
              >
                <ForwardRef
                  confirmLabel="Go back to the homepage"
                  customStyle="customize-quote customize-quote-decline"
                  hideCancelButton={true}
                  hideClose={true}
                  id="home-page-modal"
                  onBeforeOpen={null}
                  onBlur={null}
                  onCancel={null}
                  onChange={null}
                  onClick={null}
                  onConfirm={[Function]}
                  onDelete={null}
                  onEdit={null}
                  onFocus={null}
                  onSelect={null}
                  show={false}
                  webAnalyticsEvent={null}
                  webAnalyticsView={null}
                >
                  <HDModal
                    cancelLabel="Cancel"
                    className=""
                    confirmLabel="Go back to the homepage"
                    customStyle="customize-quote customize-quote-decline"
                    headerText=""
                    hideCancelButton={true}
                    hideClose={true}
                    hideConfirmButton={false}
                    hideFooter={false}
                    id="home-page-modal"
                    onBeforeOpen={null}
                    onBlur={null}
                    onCancel={null}
                    onChange={null}
                    onClick={null}
                    onClose={[Function]}
                    onConfirm={[Function]}
                    onDelete={null}
                    onEdit={null}
                    onFocus={null}
                    onSelect={null}
                    show={false}
                    webAnalyticsEvent={null}
                    webAnalyticsView={null}
                  >
                    <Portal
                      containerInfo={
                        <div
                          id="portal-root"
                        >
                          
                          
                          
                        </div>
                      }
                    />
                  </HDModal>
                </ForwardRef>
              </ForwardRef>
            </div>
          </Container>
        </div>
      </HDConfirmContactDetailsPage>
    </Connect(HDConfirmContactDetailsPage)>
  </Provider>
</Component>
`;

exports[`<HDConfirmContactDetailsPage /> check post box 2`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDConfirmContactDetailsPage)
      pageMetadata={
        Object {
          "page_name": "ConfirmContactDetails",
        }
      }
      updateMarketingPreferencesData={
        Object {
          "marketingUpdatedObj": Object {
            "baseData": Object {
              "brandCode": "HD",
            },
            "quoteData": Object {
              "offeredQuotes": Object {
                "value": "",
              },
            },
          },
        }
      }
    >
      <HDConfirmContactDetailsPage
        clearMarketingPreference={
          [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
            ],
          }
        }
        customizeSubmissionVM={null}
        dispatch={[Function]}
        onGoBack={[Function]}
        onMarketingPreferencesSuccess={[Function]}
        pageMetadata={
          Object {
            "page_name": "ConfirmContactDetails",
          }
        }
        setOfferedQuotesDetails={[Function]}
        setSubmissionVM={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
                "emailAddress1": Object {
                  "value": "test@test.com",
                },
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": Object {
                  "value": true,
                },
                "allowPost": Object {
                  "value": true,
                },
                "allowSMS": Object {
                  "value": true,
                },
                "allowTelephone": Object {
                  "value": true,
                },
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
        toggleContinueElement={[Function]}
        updateEmailSaveProgress={[Function]}
        updateMarketingPreference={[MockFunction]}
      >
        <div
          className="confirm-contact-details__background"
        >
          <Container
            className="confirm-contact-details__container"
            fluid={false}
          >
            <div
              className="confirm-contact-details__container container"
            >
              <Row
                className="confirm-contact-details__main-row"
                noGutters={false}
              >
                <div
                  className="confirm-contact-details__main-row row"
                >
                  <Col
                    md={
                      Object {
                        "offset": 3,
                        "span": 7,
                      }
                    }
                    xs={
                      Object {
                        "offset": 0,
                        "span": 12,
                      }
                    }
                  >
                    <div
                      className="col-md-7 col-12 offset-md-3 offset-0"
                    >
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <BackNavigation
                                className="confirm-contact-details__back-button"
                                id="backNavMainWizard"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                              >
                                <ForwardRef
                                  className="go-back confirm-contact-details__back-button"
                                  id="backNavMain"
                                  label="Go back"
                                  name="go-back"
                                  onBeforeOpen={null}
                                  onBlur={null}
                                  onCancel={null}
                                  onChange={null}
                                  onClick={[Function]}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onKeyPress={[Function]}
                                  onSelect={null}
                                  variant="default"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Go back",
                                    }
                                  }
                                >
                                  <HDButtonRefactor
                                    className="go-back confirm-contact-details__back-button"
                                    disabled={false}
                                    fullWidth={false}
                                    id="backNavMain"
                                    label="Go back"
                                    name="go-back"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    size={null}
                                    type="button"
                                    variant="default"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      className="hd-btn hd-btn-default go-back confirm-contact-details__back-button"
                                      disabled={false}
                                      id="backNavMain"
                                      onClick={[Function]}
                                      onKeyPress={[Function]}
                                      size={null}
                                      type="button"
                                      variant="default"
                                    >
                                      <button
                                        className="hd-btn hd-btn-default go-back confirm-contact-details__back-button btn btn-default"
                                        disabled={false}
                                        id="backNavMain"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className="back-icon"
                                        >
                                          <_default>
                                            <svg
                                              height="14"
                                              viewBox="0 0 8 14"
                                              width="8"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M0.225564 6.49312C0.0845862 6.6422 -2.91944e-07 6.8211 -2.84124e-07 7C-2.75001e-07 7.20872 0.0845862 7.38761 0.225564 7.50688L5.69549 13.2913C5.83647 13.4404 6.00564 13.5 6.17481 13.5C6.37218 13.5 6.54135 13.4404 6.65414 13.2913L7.27444 12.6353C7.41541 12.5161 7.5 12.3372 7.5 12.1284C7.5 11.9495 7.44361 11.7706 7.30263 11.6216L2.93233 7L7.30263 2.37844C7.44361 2.25917 7.5 2.08028 7.5 1.87156C7.5 1.69266 7.41541 1.51376 7.27444 1.36468L6.65414 0.708715C6.54135 0.58945 6.37218 0.5 6.17481 0.5C6.00564 0.5 5.83647 0.58945 5.69549 0.708715L0.225564 6.49312Z"
                                                fill="#0069CC"
                                              />
                                            </svg>
                                          </_default>
                                        </span>
                                        Go back
                                      </button>
                                    </Button>
                                  </HDButtonRefactor>
                                </ForwardRef>
                              </BackNavigation>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <HDLabelRefactor
                                Tag="h2"
                                adjustImagePosition={true}
                                className="confirm-contact-details__header"
                                text="What contact details would you like to use for your account?"
                              >
                                <h2
                                  className="confirm-contact-details__header"
                                >
                                  What contact details would you like to use for your account?
                                </h2>
                              </HDLabelRefactor>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <HDForm
                        className=""
                        initValues={Object {}}
                        onValidation={[Function]}
                        passedKey="default-key"
                        resetFormOnStart={false}
                        submissionVM={
                          Object {
                            "baseData": Object {
                              "accountHolder": Object {
                                "dateOfBirth": null,
                                "emailAddress1": Object {
                                  "value": "test@test.com",
                                },
                              },
                              "isExistingCustomer": false,
                              "isPostalDocument": false,
                              "jobType": "Submission",
                              "marketingContacts": Object {
                                "allowEmail": Object {
                                  "value": true,
                                },
                                "allowPost": Object {
                                  "value": true,
                                },
                                "allowSMS": Object {
                                  "value": true,
                                },
                                "allowTelephone": Object {
                                  "value": true,
                                },
                              },
                              "periodStatus": "Draft",
                              "policyAddress": Object {},
                              "producerCode": "Default",
                              "productCode": "PrivateCar_Ext",
                              "productName": "Private Car",
                              "termType": "Annual",
                            },
                            "lobData": Object {
                              "privateCar": Object {
                                "coverables": Object {
                                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                                  "drivers": Array [
                                    Object {
                                      "claimsAndConvictions": Object {
                                        "claimsDetailsCollection": Array [],
                                        "convictionsCollection": Array [],
                                      },
                                      "licenceObtainedDate": null,
                                      "person": Object {
                                        "prefix": Object {},
                                      },
                                      "previousPoliciesInformation": Object {},
                                      "residingInUKSince": null,
                                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                    },
                                  ],
                                  "vehicleDrivers": Array [
                                    Object {},
                                  ],
                                  "vehicles": Array [
                                    Object {
                                      "isCarModified": "",
                                      "ncdProtection": Object {
                                        "drivingExperience": Object {},
                                      },
                                      "tracker": "",
                                      "vehicleModifications": Array [],
                                      "vehicleWorth": "",
                                    },
                                  ],
                                },
                                "preQualQuestionSets": Array [],
                              },
                            },
                          }
                        }
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "allowPost",
                              "allowSMS",
                              "allowTelephone",
                              "allowEmail",
                              "cellNumber",
                              "emailAddress1",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "allowEmail": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowEmail",
                              },
                              "allowPost": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowPost",
                              },
                              "allowSMS": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowSMS",
                              },
                              "allowTelephone": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowTelephone",
                              },
                              "cellNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "matches": false,
                                  "max": true,
                                  "min": true,
                                  "mobileNumber": false,
                                  "notMobileNumber": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.cellNumber",
                              },
                              "emailAddress1": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "blackList": false,
                                  "email": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.emailAddress1",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Formik
                          initialTouched={Array []}
                          initialValues={
                            Object {
                              "allowEmail": true,
                              "allowPost": "",
                              "allowSMS": true,
                              "allowTelephone": true,
                              "cellNumber": "",
                              "emailAddress1": "test@test.com",
                            }
                          }
                          key="default-key"
                          validateOnMount={true}
                          validationSchema={
                            ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {},
                              "_mutate": undefined,
                              "_nodes": Array [
                                "allowPost",
                                "allowSMS",
                                "allowTelephone",
                                "allowEmail",
                                "cellNumber",
                                "emailAddress1",
                              ],
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {
                                "allowEmail": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowEmail",
                                },
                                "allowPost": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowPost",
                                },
                                "allowSMS": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowSMS",
                                },
                                "allowTelephone": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowTelephone",
                                },
                                "cellNumber": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "matches": false,
                                    "max": true,
                                    "min": true,
                                    "mobileNumber": false,
                                    "notMobileNumber": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.cellNumber",
                                },
                                "emailAddress1": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "blackList": false,
                                    "email": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.emailAddress1",
                                },
                              },
                              "tests": Array [],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                            }
                          }
                        >
                          <Form
                            className=""
                            inline={false}
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <form
                              className=""
                              noValidate={true}
                              onSubmit={[Function]}
                            >
                              <Row
                                className="confirm-contact-details__form-field-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="email-info-overlay"
                                            labelText="Email address"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                Your email address is used to log in to the app and MyAccount. Once you set up a password you’ll have instant access to your policy 24/7, where you can manage your policy and any claims. 

 We’ll also use your email address to contact you if there have been important changes to your policy or our services. And we may sometimes email you for marketing reasons, unless you've opted out.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-email"
                                        text="Email address"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-email"
                                                >
                                                  Email address
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="email-info-overlay"
                                                  labelText="Email address"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="email-info-overlay"
                                                    labelText="Email address"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="email-info-overlay"
                                                      labelText="Email address"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="email-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.emailAddress1.emailAddress1.email-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="email-input"
                                            inputMode="email"
                                            name="emailAddress1"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.emailAddress1"
                                            placeholder="Please enter your email address"
                                            size="sm"
                                            tickIcon={false}
                                            value="test@test.com"
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Email address",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="email-input"
                                              inputMode="email"
                                              name="emailAddress1"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.emailAddress1"
                                              placeholder="Please enter your email address"
                                              tickIcon={false}
                                              value="test@test.com"
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Email address",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="email-input"
                                                inputMode="email"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength={null}
                                                name="emailAddress1"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.emailAddress1"
                                                placeholder="Please enter your email address"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type={null}
                                                value="test@test.com"
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="email-input"
                                                      inputMode="email"
                                                      maxLength={null}
                                                      name="emailAddress1"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.emailAddress1"
                                                      placeholder="Please enter your email address"
                                                      type={null}
                                                      value="test@test.com"
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="email-input"
                                                        inputMode="email"
                                                        maxLength={null}
                                                        name="emailAddress1"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.emailAddress1"
                                                        placeholder="Please enter your email address"
                                                        type={null}
                                                        value="test@test.com"
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, we don't recognise that. Please try again
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-4"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-4 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-email"
                                        id="email-info-card"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-email"
                                          id="email-info-card"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="mobile-number-info-overlay"
                                            labelText="Mobile"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                We’ll use your mobile number to contact you about things relating to your policy, such as texting you a reminder if your renewal’s due soon or you’ve missed a payment. 

 Your number won’t be used for marketing purposes, unless you’ve told us you’re happy for us to do so.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-mobile"
                                        text="Mobile number"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-mobile"
                                                >
                                                  Mobile number
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="mobile-number-info-overlay"
                                                  labelText="Mobile"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="mobile-number-info-overlay"
                                                    labelText="Mobile"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="mobile-number-info-overlay"
                                                      labelText="Mobile"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="mobile-number-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.cellNumber.cellNumber.mobile-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="mobile-input"
                                            inputMode="numeric"
                                            maxLength="11"
                                            name="cellNumber"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.cellNumber"
                                            placeholder="Please enter your mobile number"
                                            size="sm"
                                            tickIcon={false}
                                            type="phone"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Mobile number",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="mobile-input"
                                              inputMode="numeric"
                                              maxLength="11"
                                              name="cellNumber"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.cellNumber"
                                              placeholder="Please enter your mobile number"
                                              tickIcon={false}
                                              type="phone"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Mobile number",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="mobile-input"
                                                inputMode="numeric"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength="11"
                                                name="cellNumber"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.cellNumber"
                                                placeholder="Please enter your mobile number"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type="phone"
                                                value=""
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="mobile-input"
                                                      inputMode="numeric"
                                                      maxLength="11"
                                                      name="cellNumber"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.cellNumber"
                                                      placeholder="Please enter your mobile number"
                                                      type="phone"
                                                      value=""
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="mobile-input"
                                                        inputMode="numeric"
                                                        maxLength="11"
                                                        name="cellNumber"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.cellNumber"
                                                        placeholder="Please enter your mobile number"
                                                        type="phone"
                                                        value=""
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, you need to answer this question
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-5"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-5 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-mobile"
                                        id="confirm-contact-details"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-mobile"
                                          id="confirm-contact-details"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <hr />
                              <Row
                                className="confirm-contact-details__your-pref-lable-text"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="h2"
                                        adjustImagePosition={true}
                                        className=""
                                        size="lg"
                                        text="Your preferences"
                                      >
                                        <h2
                                          className=""
                                          size="lg"
                                        >
                                          Your preferences
                                        </h2>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__your-pref-lable-text-msg mb-1"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text-msg mb-1 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <p>
                                        We’d love to be able to let you know about any offers, services or products we think you might be interested in. You can change your mind at any time by updating your preferences in MyAccount.
                                      </p>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        text="What’s the best way to contact you?"
                                      >
                                        <p
                                          className="confirm-contact-details__label-text"
                                        >
                                          What’s the best way to contact you?
                                        </p>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__button-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__button-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowEmail.allowEmail.confirm-contact-details-email-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-email-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowEmail"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowEmail"
                                            text="Email"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-email-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowEmail"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowEmail"
                                              text="Email"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Email",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-email-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowEmail"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowEmail"
                                                text="Email"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowEmail"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowEmail"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowEmail"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowEmail"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Email
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowTelephone.allowTelephone.confirm-contact-details-phone-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-phone-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowTelephone"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowTelephone"
                                            text="Phone"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Phone",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-phone-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowTelephone"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowTelephone"
                                              text="Phone"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Phone",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-phone-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowTelephone"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowTelephone"
                                                text="Phone"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowTelephone"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowTelephone"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowTelephone"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowTelephone"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Phone
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowSMS.allowSMS.confirm-contact-details-text-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-text-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowSMS"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowSMS"
                                            text="Text message"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Text message",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-text-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowSMS"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowSMS"
                                              text="Text message"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Text message",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-text-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowSMS"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowSMS"
                                                text="Text message"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowSMS"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowSMS"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowSMS"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowSMS"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Text message
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowPost.allowPost.confirm-contact-details-post-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-post-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowPost"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowPost"
                                            text="Post"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Post",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-post-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowPost"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowPost"
                                              text="Post"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Post",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-post-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowPost"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowPost"
                                                text="Post"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowPost"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowPost"
                                                        role="group"
                                                        type="checkbox"
                                                      >
                                                        <ToggleButton
                                                          name="allowPost"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowPost"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <div>
                                                                <div>
                                                                  Post
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__form-field-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container row"
                                >
                                  <Col
                                    className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint"
                                  >
                                    <div
                                      className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-opt-out"
                                        id="confirm-contact-details-info-card-opt-out"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-opt-out"
                                          id="confirm-contact-details-info-card-opt-out"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                            </form>
                          </Form>
                        </Formik>
                      </HDForm>
                      <Row
                        className="confirm-contact-details__inner-navigation mb-5"
                        noGutters={false}
                      >
                        <div
                          className="confirm-contact-details__inner-navigation mb-5 row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <ForwardRef
                                disabled={true}
                                id="continue-to-payment-button"
                                label="Continue to payment"
                                onBeforeOpen={null}
                                onBlur={null}
                                onCancel={null}
                                onChange={null}
                                onClick={[Function]}
                                onConfirm={null}
                                onDelete={null}
                                onEdit={null}
                                onFocus={null}
                                onSelect={null}
                                size="lg"
                                webAnalyticsEvent={
                                  Object {
                                    "event_action": "Continue - Redirecting from ConfirmContactDetails",
                                  }
                                }
                              >
                                <HDButtonRefactor
                                  className=""
                                  disabled={true}
                                  fullWidth={false}
                                  id="continue-to-payment-button"
                                  label="Continue to payment"
                                  onClick={[Function]}
                                  onKeyPress={null}
                                  size="lg"
                                  type="button"
                                  variant="primary"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    className="hd-btn hd-btn-primary "
                                    disabled={true}
                                    id="continue-to-payment-button"
                                    onClick={[Function]}
                                    onKeyPress={null}
                                    size="lg"
                                    type="button"
                                    variant="primary"
                                  >
                                    <button
                                      className="hd-btn hd-btn-primary  btn btn-primary btn-lg"
                                      disabled={true}
                                      id="continue-to-payment-button"
                                      onClick={[Function]}
                                      onKeyPress={null}
                                      type="button"
                                    >
                                      Continue to payment
                                    </button>
                                  </Button>
                                </HDButtonRefactor>
                              </ForwardRef>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </Col>
                </div>
              </Row>
              <ForwardRef
                confirmLabel="Go back to the homepage"
                customStyle="customize-quote customize-quote-decline"
                hideCancelButton={true}
                hideClose={true}
                id="home-page-modal"
                onBeforeOpen={null}
                onConfirm={[Function]}
                show={false}
                webAnalyticsView={null}
              >
                <ForwardRef
                  confirmLabel="Go back to the homepage"
                  customStyle="customize-quote customize-quote-decline"
                  hideCancelButton={true}
                  hideClose={true}
                  id="home-page-modal"
                  onBeforeOpen={null}
                  onBlur={null}
                  onCancel={null}
                  onChange={null}
                  onClick={null}
                  onConfirm={[Function]}
                  onDelete={null}
                  onEdit={null}
                  onFocus={null}
                  onSelect={null}
                  show={false}
                  webAnalyticsEvent={null}
                  webAnalyticsView={null}
                >
                  <HDModal
                    cancelLabel="Cancel"
                    className=""
                    confirmLabel="Go back to the homepage"
                    customStyle="customize-quote customize-quote-decline"
                    headerText=""
                    hideCancelButton={true}
                    hideClose={true}
                    hideConfirmButton={false}
                    hideFooter={false}
                    id="home-page-modal"
                    onBeforeOpen={null}
                    onBlur={null}
                    onCancel={null}
                    onChange={null}
                    onClick={null}
                    onClose={[Function]}
                    onConfirm={[Function]}
                    onDelete={null}
                    onEdit={null}
                    onFocus={null}
                    onSelect={null}
                    show={false}
                    webAnalyticsEvent={null}
                    webAnalyticsView={null}
                  >
                    <Portal
                      containerInfo={
                        <div
                          id="portal-root"
                        >
                          
                          
                          
                          
                          
                        </div>
                      }
                    />
                  </HDModal>
                </ForwardRef>
              </ForwardRef>
            </div>
          </Container>
        </div>
      </HDConfirmContactDetailsPage>
    </Connect(HDConfirmContactDetailsPage)>
  </Provider>
</Component>
`;

exports[`<HDConfirmContactDetailsPage /> check text message box 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDConfirmContactDetailsPage)
      pageMetadata={
        Object {
          "page_name": "ConfirmContactDetails",
        }
      }
      updateMarketingPreferencesData={
        Object {
          "marketingUpdatedObj": Object {
            "baseData": Object {
              "brandCode": "HD",
            },
            "quoteData": Object {
              "offeredQuotes": Object {
                "value": "",
              },
            },
          },
        }
      }
    >
      <HDConfirmContactDetailsPage
        clearMarketingPreference={
          [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
            ],
          }
        }
        customizeSubmissionVM={null}
        dispatch={[Function]}
        onGoBack={[Function]}
        onMarketingPreferencesSuccess={[Function]}
        pageMetadata={
          Object {
            "page_name": "ConfirmContactDetails",
          }
        }
        setOfferedQuotesDetails={[Function]}
        setSubmissionVM={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
                "emailAddress1": Object {
                  "value": "test@test.com",
                },
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": Object {
                  "value": true,
                },
                "allowPost": false,
                "allowSMS": Object {
                  "value": true,
                },
                "allowTelephone": Object {
                  "value": true,
                },
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
        toggleContinueElement={[Function]}
        updateEmailSaveProgress={[Function]}
        updateMarketingPreference={[MockFunction]}
      >
        <div
          className="confirm-contact-details__background"
        >
          <Container
            className="confirm-contact-details__container"
            fluid={false}
          >
            <div
              className="confirm-contact-details__container container"
            >
              <Row
                className="confirm-contact-details__main-row"
                noGutters={false}
              >
                <div
                  className="confirm-contact-details__main-row row"
                >
                  <Col
                    md={
                      Object {
                        "offset": 3,
                        "span": 7,
                      }
                    }
                    xs={
                      Object {
                        "offset": 0,
                        "span": 12,
                      }
                    }
                  >
                    <div
                      className="col-md-7 col-12 offset-md-3 offset-0"
                    >
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <BackNavigation
                                className="confirm-contact-details__back-button"
                                id="backNavMainWizard"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                              >
                                <ForwardRef
                                  className="go-back confirm-contact-details__back-button"
                                  id="backNavMain"
                                  label="Go back"
                                  name="go-back"
                                  onBeforeOpen={null}
                                  onBlur={null}
                                  onCancel={null}
                                  onChange={null}
                                  onClick={[Function]}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onKeyPress={[Function]}
                                  onSelect={null}
                                  variant="default"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Go back",
                                    }
                                  }
                                >
                                  <HDButtonRefactor
                                    className="go-back confirm-contact-details__back-button"
                                    disabled={false}
                                    fullWidth={false}
                                    id="backNavMain"
                                    label="Go back"
                                    name="go-back"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    size={null}
                                    type="button"
                                    variant="default"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      className="hd-btn hd-btn-default go-back confirm-contact-details__back-button"
                                      disabled={false}
                                      id="backNavMain"
                                      onClick={[Function]}
                                      onKeyPress={[Function]}
                                      size={null}
                                      type="button"
                                      variant="default"
                                    >
                                      <button
                                        className="hd-btn hd-btn-default go-back confirm-contact-details__back-button btn btn-default"
                                        disabled={false}
                                        id="backNavMain"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className="back-icon"
                                        >
                                          <_default>
                                            <svg
                                              height="14"
                                              viewBox="0 0 8 14"
                                              width="8"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M0.225564 6.49312C0.0845862 6.6422 -2.91944e-07 6.8211 -2.84124e-07 7C-2.75001e-07 7.20872 0.0845862 7.38761 0.225564 7.50688L5.69549 13.2913C5.83647 13.4404 6.00564 13.5 6.17481 13.5C6.37218 13.5 6.54135 13.4404 6.65414 13.2913L7.27444 12.6353C7.41541 12.5161 7.5 12.3372 7.5 12.1284C7.5 11.9495 7.44361 11.7706 7.30263 11.6216L2.93233 7L7.30263 2.37844C7.44361 2.25917 7.5 2.08028 7.5 1.87156C7.5 1.69266 7.41541 1.51376 7.27444 1.36468L6.65414 0.708715C6.54135 0.58945 6.37218 0.5 6.17481 0.5C6.00564 0.5 5.83647 0.58945 5.69549 0.708715L0.225564 6.49312Z"
                                                fill="#0069CC"
                                              />
                                            </svg>
                                          </_default>
                                        </span>
                                        Go back
                                      </button>
                                    </Button>
                                  </HDButtonRefactor>
                                </ForwardRef>
                              </BackNavigation>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <HDLabelRefactor
                                Tag="h2"
                                adjustImagePosition={true}
                                className="confirm-contact-details__header"
                                text="What contact details would you like to use for your account?"
                              >
                                <h2
                                  className="confirm-contact-details__header"
                                >
                                  What contact details would you like to use for your account?
                                </h2>
                              </HDLabelRefactor>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <HDForm
                        className=""
                        initValues={Object {}}
                        onValidation={[Function]}
                        passedKey="default-key"
                        resetFormOnStart={false}
                        submissionVM={
                          Object {
                            "baseData": Object {
                              "accountHolder": Object {
                                "dateOfBirth": null,
                                "emailAddress1": Object {
                                  "value": "test@test.com",
                                },
                              },
                              "isExistingCustomer": false,
                              "isPostalDocument": false,
                              "jobType": "Submission",
                              "marketingContacts": Object {
                                "allowEmail": Object {
                                  "value": true,
                                },
                                "allowPost": false,
                                "allowSMS": Object {
                                  "value": true,
                                },
                                "allowTelephone": Object {
                                  "value": true,
                                },
                              },
                              "periodStatus": "Draft",
                              "policyAddress": Object {},
                              "producerCode": "Default",
                              "productCode": "PrivateCar_Ext",
                              "productName": "Private Car",
                              "termType": "Annual",
                            },
                            "lobData": Object {
                              "privateCar": Object {
                                "coverables": Object {
                                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                                  "drivers": Array [
                                    Object {
                                      "claimsAndConvictions": Object {
                                        "claimsDetailsCollection": Array [],
                                        "convictionsCollection": Array [],
                                      },
                                      "licenceObtainedDate": null,
                                      "person": Object {
                                        "prefix": Object {},
                                      },
                                      "previousPoliciesInformation": Object {},
                                      "residingInUKSince": null,
                                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                    },
                                  ],
                                  "vehicleDrivers": Array [
                                    Object {},
                                  ],
                                  "vehicles": Array [
                                    Object {
                                      "isCarModified": "",
                                      "ncdProtection": Object {
                                        "drivingExperience": Object {},
                                      },
                                      "tracker": "",
                                      "vehicleModifications": Array [],
                                      "vehicleWorth": "",
                                    },
                                  ],
                                },
                                "preQualQuestionSets": Array [],
                              },
                            },
                          }
                        }
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "allowPost",
                              "allowSMS",
                              "allowTelephone",
                              "allowEmail",
                              "cellNumber",
                              "emailAddress1",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "allowEmail": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowEmail",
                              },
                              "allowPost": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowPost",
                              },
                              "allowSMS": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowSMS",
                              },
                              "allowTelephone": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowTelephone",
                              },
                              "cellNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "matches": false,
                                  "max": true,
                                  "min": true,
                                  "mobileNumber": false,
                                  "notMobileNumber": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.cellNumber",
                              },
                              "emailAddress1": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "blackList": false,
                                  "email": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.emailAddress1",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Formik
                          initialTouched={Array []}
                          initialValues={
                            Object {
                              "allowEmail": true,
                              "allowPost": "",
                              "allowSMS": "",
                              "allowTelephone": true,
                              "cellNumber": "",
                              "emailAddress1": "test@test.com",
                            }
                          }
                          key="default-key"
                          validateOnMount={true}
                          validationSchema={
                            ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {},
                              "_mutate": undefined,
                              "_nodes": Array [
                                "allowPost",
                                "allowSMS",
                                "allowTelephone",
                                "allowEmail",
                                "cellNumber",
                                "emailAddress1",
                              ],
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {
                                "allowEmail": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowEmail",
                                },
                                "allowPost": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowPost",
                                },
                                "allowSMS": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowSMS",
                                },
                                "allowTelephone": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowTelephone",
                                },
                                "cellNumber": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "matches": false,
                                    "max": true,
                                    "min": true,
                                    "mobileNumber": false,
                                    "notMobileNumber": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.cellNumber",
                                },
                                "emailAddress1": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "blackList": false,
                                    "email": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.emailAddress1",
                                },
                              },
                              "tests": Array [],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                            }
                          }
                        >
                          <Form
                            className=""
                            inline={false}
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <form
                              className=""
                              noValidate={true}
                              onSubmit={[Function]}
                            >
                              <Row
                                className="confirm-contact-details__form-field-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="email-info-overlay"
                                            labelText="Email address"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                Your email address is used to log in to the app and MyAccount. Once you set up a password you’ll have instant access to your policy 24/7, where you can manage your policy and any claims. 

 We’ll also use your email address to contact you if there have been important changes to your policy or our services. And we may sometimes email you for marketing reasons, unless you've opted out.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-email"
                                        text="Email address"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-email"
                                                >
                                                  Email address
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="email-info-overlay"
                                                  labelText="Email address"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="email-info-overlay"
                                                    labelText="Email address"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="email-info-overlay"
                                                      labelText="Email address"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="email-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.emailAddress1.emailAddress1.email-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="email-input"
                                            inputMode="email"
                                            name="emailAddress1"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.emailAddress1"
                                            placeholder="Please enter your email address"
                                            size="sm"
                                            tickIcon={false}
                                            value="test@test.com"
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Email address",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="email-input"
                                              inputMode="email"
                                              name="emailAddress1"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.emailAddress1"
                                              placeholder="Please enter your email address"
                                              tickIcon={false}
                                              value="test@test.com"
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Email address",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="email-input"
                                                inputMode="email"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength={null}
                                                name="emailAddress1"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.emailAddress1"
                                                placeholder="Please enter your email address"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type={null}
                                                value="test@test.com"
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="email-input"
                                                      inputMode="email"
                                                      maxLength={null}
                                                      name="emailAddress1"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.emailAddress1"
                                                      placeholder="Please enter your email address"
                                                      type={null}
                                                      value="test@test.com"
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="email-input"
                                                        inputMode="email"
                                                        maxLength={null}
                                                        name="emailAddress1"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.emailAddress1"
                                                        placeholder="Please enter your email address"
                                                        type={null}
                                                        value="test@test.com"
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, we don't recognise that. Please try again
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-4"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-4 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-email"
                                        id="email-info-card"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-email"
                                          id="email-info-card"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="mobile-number-info-overlay"
                                            labelText="Mobile"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                We’ll use your mobile number to contact you about things relating to your policy, such as texting you a reminder if your renewal’s due soon or you’ve missed a payment. 

 Your number won’t be used for marketing purposes, unless you’ve told us you’re happy for us to do so.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-mobile"
                                        text="Mobile number"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-mobile"
                                                >
                                                  Mobile number
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="mobile-number-info-overlay"
                                                  labelText="Mobile"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="mobile-number-info-overlay"
                                                    labelText="Mobile"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="mobile-number-info-overlay"
                                                      labelText="Mobile"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="mobile-number-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.cellNumber.cellNumber.mobile-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="mobile-input"
                                            inputMode="numeric"
                                            maxLength="11"
                                            name="cellNumber"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.cellNumber"
                                            placeholder="Please enter your mobile number"
                                            size="sm"
                                            tickIcon={false}
                                            type="phone"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Mobile number",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="mobile-input"
                                              inputMode="numeric"
                                              maxLength="11"
                                              name="cellNumber"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.cellNumber"
                                              placeholder="Please enter your mobile number"
                                              tickIcon={false}
                                              type="phone"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Mobile number",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="mobile-input"
                                                inputMode="numeric"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength="11"
                                                name="cellNumber"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.cellNumber"
                                                placeholder="Please enter your mobile number"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type="phone"
                                                value=""
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="mobile-input"
                                                      inputMode="numeric"
                                                      maxLength="11"
                                                      name="cellNumber"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.cellNumber"
                                                      placeholder="Please enter your mobile number"
                                                      type="phone"
                                                      value=""
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="mobile-input"
                                                        inputMode="numeric"
                                                        maxLength="11"
                                                        name="cellNumber"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.cellNumber"
                                                        placeholder="Please enter your mobile number"
                                                        type="phone"
                                                        value=""
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, you need to answer this question
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-5"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-5 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-mobile"
                                        id="confirm-contact-details"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-mobile"
                                          id="confirm-contact-details"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <hr />
                              <Row
                                className="confirm-contact-details__your-pref-lable-text"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="h2"
                                        adjustImagePosition={true}
                                        className=""
                                        size="lg"
                                        text="Your preferences"
                                      >
                                        <h2
                                          className=""
                                          size="lg"
                                        >
                                          Your preferences
                                        </h2>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__your-pref-lable-text-msg mb-1"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text-msg mb-1 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <p>
                                        We’d love to be able to let you know about any offers, services or products we think you might be interested in. You can change your mind at any time by updating your preferences in MyAccount.
                                      </p>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        text="What’s the best way to contact you?"
                                      >
                                        <p
                                          className="confirm-contact-details__label-text"
                                        >
                                          What’s the best way to contact you?
                                        </p>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__button-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__button-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowEmail.allowEmail.confirm-contact-details-email-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-email-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowEmail"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowEmail"
                                            text="Email"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-email-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowEmail"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowEmail"
                                              text="Email"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Email",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-email-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowEmail"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowEmail"
                                                text="Email"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowEmail"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowEmail"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowEmail"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowEmail"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Email
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowTelephone.allowTelephone.confirm-contact-details-phone-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-phone-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowTelephone"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowTelephone"
                                            text="Phone"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Phone",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-phone-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowTelephone"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowTelephone"
                                              text="Phone"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Phone",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-phone-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowTelephone"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowTelephone"
                                                text="Phone"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowTelephone"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowTelephone"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowTelephone"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowTelephone"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Phone
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowSMS.allowSMS.confirm-contact-details-text-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-text-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowSMS"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowSMS"
                                            text="Text message"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Text message",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-text-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowSMS"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowSMS"
                                              text="Text message"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Text message",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-text-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowSMS"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowSMS"
                                                text="Text message"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowSMS"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowSMS"
                                                        role="group"
                                                        type="checkbox"
                                                      >
                                                        <ToggleButton
                                                          name="allowSMS"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowSMS"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <div>
                                                                <div>
                                                                  Text message
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowPost.allowPost.confirm-contact-details-post-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-post-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowPost"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowPost"
                                            text="Post"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Post",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-post-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowPost"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowPost"
                                              text="Post"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Post",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-post-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowPost"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowPost"
                                                text="Post"
                                                type="checkbox"
                                                value=""
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowPost"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value=""
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowPost"
                                                        role="group"
                                                        type="checkbox"
                                                        value=""
                                                      >
                                                        <ToggleButton
                                                          checked=""
                                                          name="allowPost"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value=""
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={false}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={false}
                                                                disabled={false}
                                                                name="allowPost"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value=""
                                                              />
                                                              <div>
                                                                <div>
                                                                  Post
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__form-field-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container row"
                                >
                                  <Col
                                    className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint"
                                  >
                                    <div
                                      className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-opt-out"
                                        id="confirm-contact-details-info-card-opt-out"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-opt-out"
                                          id="confirm-contact-details-info-card-opt-out"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                            </form>
                          </Form>
                        </Formik>
                      </HDForm>
                      <Row
                        className="confirm-contact-details__inner-navigation mb-5"
                        noGutters={false}
                      >
                        <div
                          className="confirm-contact-details__inner-navigation mb-5 row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <ForwardRef
                                disabled={true}
                                id="continue-to-payment-button"
                                label="Continue to payment"
                                onBeforeOpen={null}
                                onBlur={null}
                                onCancel={null}
                                onChange={null}
                                onClick={[Function]}
                                onConfirm={null}
                                onDelete={null}
                                onEdit={null}
                                onFocus={null}
                                onSelect={null}
                                size="lg"
                                webAnalyticsEvent={
                                  Object {
                                    "event_action": "Continue - Redirecting from ConfirmContactDetails",
                                  }
                                }
                              >
                                <HDButtonRefactor
                                  className=""
                                  disabled={true}
                                  fullWidth={false}
                                  id="continue-to-payment-button"
                                  label="Continue to payment"
                                  onClick={[Function]}
                                  onKeyPress={null}
                                  size="lg"
                                  type="button"
                                  variant="primary"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    className="hd-btn hd-btn-primary "
                                    disabled={true}
                                    id="continue-to-payment-button"
                                    onClick={[Function]}
                                    onKeyPress={null}
                                    size="lg"
                                    type="button"
                                    variant="primary"
                                  >
                                    <button
                                      className="hd-btn hd-btn-primary  btn btn-primary btn-lg"
                                      disabled={true}
                                      id="continue-to-payment-button"
                                      onClick={[Function]}
                                      onKeyPress={null}
                                      type="button"
                                    >
                                      Continue to payment
                                    </button>
                                  </Button>
                                </HDButtonRefactor>
                              </ForwardRef>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </Col>
                </div>
              </Row>
              <ForwardRef
                confirmLabel="Go back to the homepage"
                customStyle="customize-quote customize-quote-decline"
                hideCancelButton={true}
                hideClose={true}
                id="home-page-modal"
                onBeforeOpen={null}
                onConfirm={[Function]}
                show={false}
                webAnalyticsView={null}
              >
                <ForwardRef
                  confirmLabel="Go back to the homepage"
                  customStyle="customize-quote customize-quote-decline"
                  hideCancelButton={true}
                  hideClose={true}
                  id="home-page-modal"
                  onBeforeOpen={null}
                  onBlur={null}
                  onCancel={null}
                  onChange={null}
                  onClick={null}
                  onConfirm={[Function]}
                  onDelete={null}
                  onEdit={null}
                  onFocus={null}
                  onSelect={null}
                  show={false}
                  webAnalyticsEvent={null}
                  webAnalyticsView={null}
                >
                  <HDModal
                    cancelLabel="Cancel"
                    className=""
                    confirmLabel="Go back to the homepage"
                    customStyle="customize-quote customize-quote-decline"
                    headerText=""
                    hideCancelButton={true}
                    hideClose={true}
                    hideConfirmButton={false}
                    hideFooter={false}
                    id="home-page-modal"
                    onBeforeOpen={null}
                    onBlur={null}
                    onCancel={null}
                    onChange={null}
                    onClick={null}
                    onClose={[Function]}
                    onConfirm={[Function]}
                    onDelete={null}
                    onEdit={null}
                    onFocus={null}
                    onSelect={null}
                    show={false}
                    webAnalyticsEvent={null}
                    webAnalyticsView={null}
                  >
                    <Portal
                      containerInfo={
                        <div
                          id="portal-root"
                        >
                          
                          
                          
                          
                        </div>
                      }
                    />
                  </HDModal>
                </ForwardRef>
              </ForwardRef>
            </div>
          </Container>
        </div>
      </HDConfirmContactDetailsPage>
    </Connect(HDConfirmContactDetailsPage)>
  </Provider>
</Component>
`;

exports[`<HDConfirmContactDetailsPage /> continue button click 1`] = `
<Component>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(HDConfirmContactDetailsPage)
      pageMetadata={
        Object {
          "page_name": "ConfirmContactDetails",
        }
      }
      updateMarketingPreferencesData={
        Object {
          "marketingUpdatedObj": Object {
            "baseData": Object {
              "brandCode": "HD",
            },
            "quoteData": Object {
              "offeredQuotes": Object {
                "value": "",
              },
            },
          },
        }
      }
    >
      <HDConfirmContactDetailsPage
        clearMarketingPreference={
          [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
            ],
          }
        }
        customizeSubmissionVM={null}
        dispatch={[Function]}
        onGoBack={[Function]}
        onMarketingPreferencesSuccess={[Function]}
        pageMetadata={
          Object {
            "page_name": "ConfirmContactDetails",
          }
        }
        setOfferedQuotesDetails={[Function]}
        setSubmissionVM={[Function]}
        submissionVM={
          Object {
            "baseData": Object {
              "accountHolder": Object {
                "dateOfBirth": null,
                "emailAddress1": Object {
                  "value": "test@test.com",
                },
              },
              "isExistingCustomer": false,
              "isPostalDocument": false,
              "jobType": "Submission",
              "marketingContacts": Object {
                "allowEmail": Object {
                  "value": true,
                },
                "allowPost": Object {
                  "value": true,
                },
                "allowSMS": Object {
                  "value": true,
                },
                "allowTelephone": Object {
                  "value": true,
                },
              },
              "periodStatus": "Draft",
              "policyAddress": Object {},
              "producerCode": "Default",
              "productCode": "PrivateCar_Ext",
              "productName": "Private Car",
              "termType": "Annual",
            },
            "lobData": Object {
              "privateCar": Object {
                "coverables": Object {
                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                  "drivers": Array [
                    Object {
                      "claimsAndConvictions": Object {
                        "claimsDetailsCollection": Array [],
                        "convictionsCollection": Array [],
                      },
                      "licenceObtainedDate": null,
                      "person": Object {
                        "prefix": Object {},
                      },
                      "previousPoliciesInformation": Object {},
                      "residingInUKSince": null,
                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                    },
                  ],
                  "vehicleDrivers": Array [
                    Object {},
                  ],
                  "vehicles": Array [
                    Object {
                      "isCarModified": "",
                      "ncdProtection": Object {
                        "drivingExperience": Object {},
                      },
                      "tracker": "",
                      "vehicleModifications": Array [],
                      "vehicleWorth": "",
                    },
                  ],
                },
                "preQualQuestionSets": Array [],
              },
            },
          }
        }
        toggleContinueElement={[Function]}
        updateEmailSaveProgress={[Function]}
        updateMarketingPreference={
          [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "baseData": Object {
                    "accountHolder": Object {
                      "dateOfBirth": null,
                      "emailAddress1": Object {
                        "value": "test@test.com",
                      },
                    },
                    "isExistingCustomer": false,
                    "isPostalDocument": false,
                    "jobType": "Submission",
                    "marketingContacts": Object {
                      "allowEmail": Object {
                        "value": true,
                      },
                      "allowPost": Object {
                        "value": true,
                      },
                      "allowSMS": Object {
                        "value": true,
                      },
                      "allowTelephone": Object {
                        "value": true,
                      },
                    },
                    "periodStatus": "Draft",
                    "policyAddress": Object {},
                    "producerCode": "Default",
                    "productCode": "PrivateCar_Ext",
                    "productName": "Private Car",
                    "termType": "Annual",
                  },
                  "lobData": Object {
                    "privateCar": Object {
                      "coverables": Object {
                        "addInterestTypeCategory": "PAVhcleAddlInterest",
                        "drivers": Array [
                          Object {
                            "claimsAndConvictions": Object {
                              "claimsDetailsCollection": Array [],
                              "convictionsCollection": Array [],
                            },
                            "licenceObtainedDate": null,
                            "person": Object {
                              "prefix": Object {},
                            },
                            "previousPoliciesInformation": Object {},
                            "residingInUKSince": null,
                            "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                          },
                        ],
                        "vehicleDrivers": Array [
                          Object {},
                        ],
                        "vehicles": Array [
                          Object {
                            "isCarModified": "",
                            "ncdProtection": Object {
                              "drivingExperience": Object {},
                            },
                            "tracker": "",
                            "vehicleModifications": Array [],
                            "vehicleWorth": "",
                          },
                        ],
                      },
                      "preQualQuestionSets": Array [],
                    },
                  },
                },
                [Function],
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Object {
                  "type": null,
                },
              },
            ],
          }
        }
      >
        <div
          className="confirm-contact-details__background"
        >
          <Container
            className="confirm-contact-details__container"
            fluid={false}
          >
            <div
              className="confirm-contact-details__container container"
            >
              <Row
                className="confirm-contact-details__main-row"
                noGutters={false}
              >
                <div
                  className="confirm-contact-details__main-row row"
                >
                  <Col
                    md={
                      Object {
                        "offset": 3,
                        "span": 7,
                      }
                    }
                    xs={
                      Object {
                        "offset": 0,
                        "span": 12,
                      }
                    }
                  >
                    <div
                      className="col-md-7 col-12 offset-md-3 offset-0"
                    >
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <BackNavigation
                                className="confirm-contact-details__back-button"
                                id="backNavMainWizard"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                              >
                                <ForwardRef
                                  className="go-back confirm-contact-details__back-button"
                                  id="backNavMain"
                                  label="Go back"
                                  name="go-back"
                                  onBeforeOpen={null}
                                  onBlur={null}
                                  onCancel={null}
                                  onChange={null}
                                  onClick={[Function]}
                                  onConfirm={null}
                                  onDelete={null}
                                  onEdit={null}
                                  onFocus={null}
                                  onKeyPress={[Function]}
                                  onSelect={null}
                                  variant="default"
                                  webAnalyticsEvent={
                                    Object {
                                      "event_action": "Go back",
                                    }
                                  }
                                >
                                  <HDButtonRefactor
                                    className="go-back confirm-contact-details__back-button"
                                    disabled={false}
                                    fullWidth={false}
                                    id="backNavMain"
                                    label="Go back"
                                    name="go-back"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    size={null}
                                    type="button"
                                    variant="default"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      className="hd-btn hd-btn-default go-back confirm-contact-details__back-button"
                                      disabled={false}
                                      id="backNavMain"
                                      onClick={[Function]}
                                      onKeyPress={[Function]}
                                      size={null}
                                      type="button"
                                      variant="default"
                                    >
                                      <button
                                        className="hd-btn hd-btn-default go-back confirm-contact-details__back-button btn btn-default"
                                        disabled={false}
                                        id="backNavMain"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className="back-icon"
                                        >
                                          <_default>
                                            <svg
                                              height="14"
                                              viewBox="0 0 8 14"
                                              width="8"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M0.225564 6.49312C0.0845862 6.6422 -2.91944e-07 6.8211 -2.84124e-07 7C-2.75001e-07 7.20872 0.0845862 7.38761 0.225564 7.50688L5.69549 13.2913C5.83647 13.4404 6.00564 13.5 6.17481 13.5C6.37218 13.5 6.54135 13.4404 6.65414 13.2913L7.27444 12.6353C7.41541 12.5161 7.5 12.3372 7.5 12.1284C7.5 11.9495 7.44361 11.7706 7.30263 11.6216L2.93233 7L7.30263 2.37844C7.44361 2.25917 7.5 2.08028 7.5 1.87156C7.5 1.69266 7.41541 1.51376 7.27444 1.36468L6.65414 0.708715C6.54135 0.58945 6.37218 0.5 6.17481 0.5C6.00564 0.5 5.83647 0.58945 5.69549 0.708715L0.225564 6.49312Z"
                                                fill="#0069CC"
                                              />
                                            </svg>
                                          </_default>
                                        </span>
                                        Go back
                                      </button>
                                    </Button>
                                  </HDButtonRefactor>
                                </ForwardRef>
                              </BackNavigation>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Row
                        noGutters={false}
                      >
                        <div
                          className="row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <HDLabelRefactor
                                Tag="h2"
                                adjustImagePosition={true}
                                className="confirm-contact-details__header"
                                text="What contact details would you like to use for your account?"
                              >
                                <h2
                                  className="confirm-contact-details__header"
                                >
                                  What contact details would you like to use for your account?
                                </h2>
                              </HDLabelRefactor>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <HDForm
                        className=""
                        initValues={Object {}}
                        onValidation={[Function]}
                        passedKey="default-key"
                        resetFormOnStart={false}
                        submissionVM={
                          Object {
                            "baseData": Object {
                              "accountHolder": Object {
                                "dateOfBirth": null,
                                "emailAddress1": Object {
                                  "value": "test@test.com",
                                },
                              },
                              "isExistingCustomer": false,
                              "isPostalDocument": false,
                              "jobType": "Submission",
                              "marketingContacts": Object {
                                "allowEmail": Object {
                                  "value": true,
                                },
                                "allowPost": Object {
                                  "value": true,
                                },
                                "allowSMS": Object {
                                  "value": true,
                                },
                                "allowTelephone": Object {
                                  "value": true,
                                },
                              },
                              "periodStatus": "Draft",
                              "policyAddress": Object {},
                              "producerCode": "Default",
                              "productCode": "PrivateCar_Ext",
                              "productName": "Private Car",
                              "termType": "Annual",
                            },
                            "lobData": Object {
                              "privateCar": Object {
                                "coverables": Object {
                                  "addInterestTypeCategory": "PAVhcleAddlInterest",
                                  "drivers": Array [
                                    Object {
                                      "claimsAndConvictions": Object {
                                        "claimsDetailsCollection": Array [],
                                        "convictionsCollection": Array [],
                                      },
                                      "licenceObtainedDate": null,
                                      "person": Object {
                                        "prefix": Object {},
                                      },
                                      "previousPoliciesInformation": Object {},
                                      "residingInUKSince": null,
                                      "tempID": "dd309e0e-8153-423c-aaa5-9930481060ad",
                                    },
                                  ],
                                  "vehicleDrivers": Array [
                                    Object {},
                                  ],
                                  "vehicles": Array [
                                    Object {
                                      "isCarModified": "",
                                      "ncdProtection": Object {
                                        "drivingExperience": Object {},
                                      },
                                      "tracker": "",
                                      "vehicleModifications": Array [],
                                      "vehicleWorth": "",
                                    },
                                  ],
                                },
                                "preQualQuestionSets": Array [],
                              },
                            },
                          }
                        }
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": undefined,
                            "_nodes": Array [
                              "allowPost",
                              "allowSMS",
                              "allowTelephone",
                              "allowEmail",
                              "cellNumber",
                              "emailAddress1",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "allowEmail": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowEmail",
                              },
                              "allowPost": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowPost",
                              },
                              "allowSMS": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowSMS",
                              },
                              "allowTelephone": BooleanSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "boolean",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "boolean",
                                "vmPath": "baseData.marketingContacts.allowTelephone",
                              },
                              "cellNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "matches": false,
                                  "max": true,
                                  "min": true,
                                  "mobileNumber": false,
                                  "notMobileNumber": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.cellNumber",
                              },
                              "emailAddress1": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "VMValidation": false,
                                  "blackList": false,
                                  "email": false,
                                  "required": true,
                                },
                                "_mutate": undefined,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "string",
                                "vmPath": "baseData.accountHolder.emailAddress1",
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Formik
                          initialTouched={Array []}
                          initialValues={
                            Object {
                              "allowEmail": true,
                              "allowPost": true,
                              "allowSMS": true,
                              "allowTelephone": true,
                              "cellNumber": "",
                              "emailAddress1": "test@test.com",
                            }
                          }
                          key="default-key"
                          validateOnMount={true}
                          validationSchema={
                            ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {},
                              "_mutate": undefined,
                              "_nodes": Array [
                                "allowPost",
                                "allowSMS",
                                "allowTelephone",
                                "allowEmail",
                                "cellNumber",
                                "emailAddress1",
                              ],
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {
                                "allowEmail": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowEmail",
                                },
                                "allowPost": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowPost",
                                },
                                "allowSMS": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowSMS",
                                },
                                "allowTelephone": BooleanSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "boolean",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "boolean",
                                  "vmPath": "baseData.marketingContacts.allowTelephone",
                                },
                                "cellNumber": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "matches": false,
                                    "max": true,
                                    "min": true,
                                    "mobileNumber": false,
                                    "notMobileNumber": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.cellNumber",
                                },
                                "emailAddress1": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "VMValidation": false,
                                    "blackList": false,
                                    "email": false,
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                  "type": "string",
                                  "vmPath": "baseData.accountHolder.emailAddress1",
                                },
                              },
                              "tests": Array [],
                              "transforms": Array [
                                [Function],
                              ],
                              "type": "object",
                            }
                          }
                        >
                          <Form
                            className=""
                            inline={false}
                            noValidate={true}
                            onSubmit={[Function]}
                          >
                            <form
                              className=""
                              noValidate={true}
                              onSubmit={[Function]}
                            >
                              <Row
                                className="confirm-contact-details__form-field-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="email-info-overlay"
                                            labelText="Email address"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Email address Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                Your email address is used to log in to the app and MyAccount. Once you set up a password you’ll have instant access to your policy 24/7, where you can manage your policy and any claims. 

 We’ll also use your email address to contact you if there have been important changes to your policy or our services. And we may sometimes email you for marketing reasons, unless you've opted out.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-email"
                                        text="Email address"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-email"
                                                >
                                                  Email address
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="email-info-overlay"
                                                  labelText="Email address"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Email address Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="email-info-overlay"
                                                    labelText="Email address"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Email address Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="email-info-overlay"
                                                      labelText="Email address"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="email-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.emailAddress1.emailAddress1.email-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="email-input"
                                            inputMode="email"
                                            name="emailAddress1"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.emailAddress1"
                                            placeholder="Please enter your email address"
                                            size="sm"
                                            tickIcon={false}
                                            value="test@test.com"
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Email address",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="email-input"
                                              inputMode="email"
                                              name="emailAddress1"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.emailAddress1"
                                              placeholder="Please enter your email address"
                                              tickIcon={false}
                                              value="test@test.com"
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Email address",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="email-input"
                                                inputMode="email"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength={null}
                                                name="emailAddress1"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.emailAddress1"
                                                placeholder="Please enter your email address"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type={null}
                                                value="test@test.com"
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="email-input"
                                                      inputMode="email"
                                                      maxLength={null}
                                                      name="emailAddress1"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.emailAddress1"
                                                      placeholder="Please enter your email address"
                                                      type={null}
                                                      value="test@test.com"
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="email-input"
                                                        inputMode="email"
                                                        maxLength={null}
                                                        name="emailAddress1"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.emailAddress1"
                                                        placeholder="Please enter your email address"
                                                        type={null}
                                                        value="test@test.com"
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, we don't recognise that. Please try again
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-4"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-4 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-email"
                                        id="email-info-card"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-email"
                                          id="email-info-card"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            This will be used as your log-in for the app and MyAccount, where you'll be able to view your documents and make claims. We'll also use it to email you about any important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container mb-2"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container mb-2 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        icon={
                                          <ForwardRef
                                            id="mobile-number-info-overlay"
                                            labelText="Mobile"
                                            onBeforeOpen={null}
                                            overlayButtonIcon={
                                              <img
                                                alt="info_circle"
                                                src="Darkicons_desktopinfo.svg"
                                              />
                                            }
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                            webAnalyticsView={
                                              Object {
                                                "page_name": "ConfirmContactDetails",
                                                "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                              }
                                            }
                                          >
                                            <div>
                                              <p>
                                                We’ll use your mobile number to contact you about things relating to your policy, such as texting you a reminder if your renewal’s due soon or you’ve missed a payment. 

 Your number won’t be used for marketing purposes, unless you’ve told us you’re happy for us to do so.
                                              </p>
                                            </div>
                                          </ForwardRef>
                                        }
                                        iconPosition="r"
                                        id="confirm-contact-details-label-mobile"
                                        text="Mobile number"
                                      >
                                        <Row
                                          className="label-with-icon align-items-start confirm-contact-details__label-text"
                                          noGutters={false}
                                        >
                                          <div
                                            className="label-with-icon align-items-start confirm-contact-details__label-text row"
                                          >
                                            <Col
                                              className="pr-0"
                                            >
                                              <div
                                                className="pr-0 col"
                                              >
                                                <p
                                                  className="confirm-contact-details__label-text"
                                                  id="confirm-contact-details-label-mobile"
                                                >
                                                  Mobile number
                                                </p>
                                              </div>
                                            </Col>
                                            <Col
                                              className="  "
                                              xs="auto"
                                            >
                                              <div
                                                className="   col-auto"
                                              >
                                                <ForwardRef
                                                  id="mobile-number-info-overlay"
                                                  labelText="Mobile"
                                                  onBeforeOpen={null}
                                                  overlayButtonIcon={
                                                    <img
                                                      alt="info_circle"
                                                      src="Darkicons_desktopinfo.svg"
                                                    />
                                                  }
                                                  webAnalyticsEvent={
                                                    Object {
                                                      "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                  webAnalyticsView={
                                                    Object {
                                                      "page_name": "ConfirmContactDetails",
                                                      "page_section": "Summary - Confirm Contact Details - Mobile number Info",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    id="mobile-number-info-overlay"
                                                    labelText="Mobile"
                                                    onBeforeOpen={[Function]}
                                                    onBlur={null}
                                                    onCancel={null}
                                                    onChange={null}
                                                    onClick={null}
                                                    onConfirm={null}
                                                    onDelete={null}
                                                    onEdit={null}
                                                    onFocus={null}
                                                    onSelect={null}
                                                    overlayButtonIcon={
                                                      <img
                                                        alt="info_circle"
                                                        src="Darkicons_desktopinfo.svg"
                                                      />
                                                    }
                                                    webAnalyticsEvent={
                                                      Object {
                                                        "event_action": "Summary - Confirm Contact Details - Mobile number Info",
                                                      }
                                                    }
                                                  >
                                                    <HDOverlayPopup
                                                      cancelButton="Cancel"
                                                      className=""
                                                      closeOnSelect={false}
                                                      confirmButton="Confirm"
                                                      customStyle=""
                                                      disabledConfirmButton={false}
                                                      headerBar={null}
                                                      hidden={false}
                                                      hideOnConfirm={true}
                                                      id="mobile-number-info-overlay"
                                                      labelText="Mobile"
                                                      onBeforeClose={[Function]}
                                                      onBeforeOpen={[Function]}
                                                      onCancel={[Function]}
                                                      onConfirm={[Function]}
                                                      overlayButtonIcon={
                                                        <img
                                                          alt="info_circle"
                                                          src="Darkicons_desktopinfo.svg"
                                                        />
                                                      }
                                                      overlayButtonsClassName=""
                                                      showButtons={false}
                                                    >
                                                      <div
                                                        className="hd-information-tooltip "
                                                      >
                                                        <div
                                                          className="hd-overlay-btn "
                                                          hidden={false}
                                                          id="mobile-number-info-overlay"
                                                          onClick={[Function]}
                                                        >
                                                          <img
                                                            alt="info_circle"
                                                            src="Darkicons_desktopinfo.svg"
                                                          />
                                                        </div>
                                                      </div>
                                                    </HDOverlayPopup>
                                                  </ForwardRef>
                                                </ForwardRef>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__input-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__input-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.accountHolder.cellNumber.cellNumber.mobile-input"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDTextInput",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="mobile-input"
                                            inputMode="numeric"
                                            maxLength="11"
                                            name="cellNumber"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.accountHolder.cellNumber"
                                            placeholder="Please enter your mobile number"
                                            size="sm"
                                            tickIcon={false}
                                            type="phone"
                                            value=""
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details",
                                                "event_value": "Mobile number",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom custom-sm"
                                              id="mobile-input"
                                              inputMode="numeric"
                                              maxLength="11"
                                              name="cellNumber"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.accountHolder.cellNumber"
                                              placeholder="Please enter your mobile number"
                                              tickIcon={false}
                                              type="phone"
                                              value=""
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details",
                                                  "event_value": "Mobile number",
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                allowLeadingZero={false}
                                                appendContent={null}
                                                appendLabel={null}
                                                className="undefined  custom custom-sm"
                                                customClassName=""
                                                data={null}
                                                disabled={false}
                                                icon={null}
                                                id="mobile-input"
                                                inputMode="numeric"
                                                isInvalidCustom={null}
                                                mask={null}
                                                maskChar="_"
                                                maxLength="11"
                                                name="cellNumber"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyPress={[Function]}
                                                path="baseData.accountHolder.cellNumber"
                                                placeholder="Please enter your mobile number"
                                                preText={null}
                                                reset={false}
                                                size={null}
                                                svgIcon={null}
                                                thousandSeprator={false}
                                                tickIcon={false}
                                                type="phone"
                                                value=""
                                              >
                                                <InputGroup
                                                  className="undefined  custom custom-sm "
                                                  size={null}
                                                >
                                                  <div
                                                    className="undefined  custom custom-sm  input-group"
                                                  >
                                                    <FormControl
                                                      className="hd-text-input__form-control"
                                                      data-testid="text-input"
                                                      disabled={false}
                                                      id="mobile-input"
                                                      inputMode="numeric"
                                                      maxLength="11"
                                                      name="cellNumber"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyPress={[Function]}
                                                      path="baseData.accountHolder.cellNumber"
                                                      placeholder="Please enter your mobile number"
                                                      type="phone"
                                                      value=""
                                                    >
                                                      <input
                                                        className="hd-text-input__form-control form-control"
                                                        data-testid="text-input"
                                                        disabled={false}
                                                        id="mobile-input"
                                                        inputMode="numeric"
                                                        maxLength="11"
                                                        name="cellNumber"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyPress={[Function]}
                                                        path="baseData.accountHolder.cellNumber"
                                                        placeholder="Please enter your mobile number"
                                                        type="phone"
                                                        value=""
                                                      />
                                                    </FormControl>
                                                    <i
                                                      className="fa fa-exclamation exclam hd-text-input__exclam"
                                                    />
                                                  </div>
                                                </InputGroup>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Sorry, you need to answer this question
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__info-tip-container mb-5"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__info-tip-container mb-5 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-mobile"
                                        id="confirm-contact-details"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-mobile"
                                          id="confirm-contact-details"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            It's really helpful if you tell us a mobile number, so we can keep in touch about any claim updates or important changes to your policy.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <hr />
                              <Row
                                className="confirm-contact-details__your-pref-lable-text"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="h2"
                                        adjustImagePosition={true}
                                        className=""
                                        size="lg"
                                        text="Your preferences"
                                      >
                                        <h2
                                          className=""
                                          size="lg"
                                        >
                                          Your preferences
                                        </h2>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__your-pref-lable-text-msg mb-1"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__your-pref-lable-text-msg mb-1 row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <p>
                                        We’d love to be able to let you know about any offers, services or products we think you might be interested in. You can change your mind at any time by updating your preferences in MyAccount.
                                      </p>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__label-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__label-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <HDLabelRefactor
                                        Tag="p"
                                        adjustImagePosition={true}
                                        className="confirm-contact-details__label-text"
                                        text="What’s the best way to contact you?"
                                      >
                                        <p
                                          className="confirm-contact-details__label-text"
                                        >
                                          What’s the best way to contact you?
                                        </p>
                                      </HDLabelRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__button-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__button-container row"
                                >
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowEmail.allowEmail.confirm-contact-details-email-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-email-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowEmail"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowEmail"
                                            text="Email"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Email",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-email-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowEmail"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowEmail"
                                              text="Email"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Email",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-email-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowEmail"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowEmail"
                                                text="Email"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowEmail"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowEmail"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowEmail"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowEmail"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Email
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowTelephone.allowTelephone.confirm-contact-details-phone-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-phone-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowTelephone"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowTelephone"
                                            text="Phone"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Phone",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-phone-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowTelephone"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowTelephone"
                                              text="Phone"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Phone",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-phone-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowTelephone"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowTelephone"
                                                text="Phone"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowTelephone"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowTelephone"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowTelephone"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowTelephone"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Phone
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowSMS.allowSMS.confirm-contact-details-text-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-text-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowSMS"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowSMS"
                                            text="Text message"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Text message",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-text-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowSMS"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowSMS"
                                              text="Text message"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Text message",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-text-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowSMS"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowSMS"
                                                text="Text message"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowSMS"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowSMS"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowSMS"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowSMS"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Text message
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                  <Col>
                                    <div
                                      className="col"
                                    >
                                      <FormGroup
                                        key="baseData.marketingContacts.allowPost.allowPost.confirm-contact-details-post-checkbox"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <FormControl
                                            as={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "defaultProps": Object {
                                                  "id": "default-id",
                                                  "onBeforeOpen": null,
                                                  "onBlur": null,
                                                  "onCancel": null,
                                                  "onChange": null,
                                                  "onClick": null,
                                                  "onConfirm": null,
                                                  "onDelete": null,
                                                  "onEdit": null,
                                                  "onFocus": null,
                                                  "onSelect": null,
                                                  "webAnalyticsEvent": null,
                                                },
                                                "displayName": undefined,
                                                "propTypes": Object {
                                                  "id": [Function],
                                                  "onBeforeOpen": [Function],
                                                  "onBlur": [Function],
                                                  "onCancel": [Function],
                                                  "onChange": [Function],
                                                  "onClick": [Function],
                                                  "onConfirm": [Function],
                                                  "onDelete": [Function],
                                                  "onEdit": [Function],
                                                  "onFocus": [Function],
                                                  "onSelect": [Function],
                                                  "webAnalyticsEvent": [Function],
                                                },
                                                "render": [Function],
                                                "type": undefined,
                                                "typeName": "HDCheckbox",
                                              }
                                            }
                                            className="undefined "
                                            custom={true}
                                            id="confirm-contact-details-post-checkbox"
                                            label={
                                              Object {
                                                "text": " ",
                                              }
                                            }
                                            name="allowPost"
                                            onBeforeOpen={null}
                                            onBlur={[Function]}
                                            onCancel={null}
                                            onChange={[Function]}
                                            onClick={null}
                                            onConfirm={null}
                                            onDelete={null}
                                            onEdit={null}
                                            onFocus={null}
                                            onSelect={null}
                                            path="baseData.marketingContacts.allowPost"
                                            text="Post"
                                            value={true}
                                            webAnalyticsEvent={
                                              Object {
                                                "event_action": "Summary - Confirm Contact Details - Post",
                                              }
                                            }
                                          >
                                            <ForwardRef
                                              className="undefined  custom"
                                              id="confirm-contact-details-post-checkbox"
                                              label={
                                                Object {
                                                  "text": " ",
                                                }
                                              }
                                              name="allowPost"
                                              onBeforeOpen={null}
                                              onBlur={[Function]}
                                              onCancel={null}
                                              onChange={[Function]}
                                              onClick={null}
                                              onConfirm={null}
                                              onDelete={null}
                                              onEdit={null}
                                              onFocus={null}
                                              onSelect={null}
                                              path="baseData.marketingContacts.allowPost"
                                              text="Post"
                                              value={true}
                                              webAnalyticsEvent={
                                                Object {
                                                  "event_action": "Summary - Confirm Contact Details - Post",
                                                }
                                              }
                                            >
                                              <HDCheckbox
                                                className="undefined  custom"
                                                data={null}
                                                doReset={false}
                                                id="confirm-contact-details-post-checkbox"
                                                label={
                                                  Object {
                                                    "text": " ",
                                                  }
                                                }
                                                name="allowPost"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                path="baseData.marketingContacts.allowPost"
                                                text="Post"
                                                type="checkbox"
                                                value={true}
                                              >
                                                <styled.div
                                                  className="undefined  custom"
                                                >
                                                  <div
                                                    className="sc-iqAclL jQDFmK undefined  custom"
                                                  >
                                                    <Styled(HDLabel)
                                                      text=" "
                                                    >
                                                      <HDLabel
                                                        additionalText={null}
                                                        className="sc-crzoAE bnBXXR"
                                                        icon={null}
                                                        iconPosition={null}
                                                        size="lg"
                                                        text=" "
                                                        theme="dark"
                                                      >
                                                        <styled.span
                                                          theme="dark"
                                                        >
                                                          <span
                                                            className="sc-pNWdM hqViXx"
                                                          >
                                                            <span
                                                              className="label-text size-lg"
                                                            >
                                                              <span>
                                                                 
                                                              </span>
                                                            </span>
                                                          </span>
                                                        </styled.span>
                                                      </HDLabel>
                                                    </Styled(HDLabel)>
                                                    <ButtonGroup
                                                      name="allowPost"
                                                      role="group"
                                                      toggle={true}
                                                      type="checkbox"
                                                      value={true}
                                                      vertical={false}
                                                    >
                                                      <div
                                                        className="btn-group btn-group-toggle"
                                                        name="allowPost"
                                                        role="group"
                                                        type="checkbox"
                                                        value={true}
                                                      >
                                                        <ToggleButton
                                                          checked={true}
                                                          name="allowPost"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={true}
                                                          variant="default"
                                                        >
                                                          <Button
                                                            active={true}
                                                            as="label"
                                                            className=""
                                                            disabled={false}
                                                            variant="default"
                                                          >
                                                            <label
                                                              className="btn active btn-default"
                                                              disabled={false}
                                                            >
                                                              <input
                                                                autoComplete="off"
                                                                checked={true}
                                                                disabled={false}
                                                                name="allowPost"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="checkbox"
                                                                value={true}
                                                              />
                                                              <div>
                                                                <div>
                                                                  Post
                                                                </div>
                                                              </div>
                                                            </label>
                                                          </Button>
                                                        </ToggleButton>
                                                      </div>
                                                    </ButtonGroup>
                                                  </div>
                                                </styled.div>
                                              </HDCheckbox>
                                            </ForwardRef>
                                          </FormControl>
                                          <Feedback
                                            type="invalid"
                                          >
                                            <div
                                              className="invalid-feedback"
                                            >
                                              Please enter valid value
                                            </div>
                                          </Feedback>
                                        </div>
                                      </FormGroup>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                              <Row
                                className="confirm-contact-details__form-field-container"
                                noGutters={false}
                              >
                                <div
                                  className="confirm-contact-details__form-field-container row"
                                >
                                  <Col
                                    className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint"
                                  >
                                    <div
                                      className="confirm-contact-details__info-tip-container confirm-contact-details__ccdOptOutHint col"
                                    >
                                      <HDInfoCardRefactor
                                        className="confirm-contact-details__info-card-opt-out"
                                        id="confirm-contact-details-info-card-opt-out"
                                        image="tip_circle_purple.svg"
                                        isRight={false}
                                        notes={null}
                                        paragraphs={
                                          Array [
                                            "Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.",
                                          ]
                                        }
                                        size={null}
                                        theme={null}
                                        title={null}
                                      >
                                        <div
                                          className="info-card left  confirm-contact-details__info-card-opt-out"
                                          id="confirm-contact-details-info-card-opt-out"
                                        >
                                          <img
                                            alt="info-card"
                                            className="info-card__icon"
                                            src="tip_circle_purple.svg"
                                          />
                                          <p
                                            className="info-card__paragraph paragraph_0"
                                            key="0"
                                          >
                                            Prefer to opt out? Don’t worry, we’ll still contact you about any important changes to your policy or our services.
                                          </p>
                                        </div>
                                      </HDInfoCardRefactor>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                            </form>
                          </Form>
                        </Formik>
                      </HDForm>
                      <Row
                        className="confirm-contact-details__inner-navigation mb-5"
                        noGutters={false}
                      >
                        <div
                          className="confirm-contact-details__inner-navigation mb-5 row"
                        >
                          <Col>
                            <div
                              className="col"
                            >
                              <ForwardRef
                                disabled={true}
                                id="continue-to-payment-button"
                                label="Continue to payment"
                                onBeforeOpen={null}
                                onBlur={null}
                                onCancel={null}
                                onChange={null}
                                onClick={[Function]}
                                onConfirm={null}
                                onDelete={null}
                                onEdit={null}
                                onFocus={null}
                                onSelect={null}
                                size="lg"
                                webAnalyticsEvent={
                                  Object {
                                    "event_action": "Continue - Redirecting from ConfirmContactDetails",
                                  }
                                }
                              >
                                <HDButtonRefactor
                                  className=""
                                  disabled={true}
                                  fullWidth={false}
                                  id="continue-to-payment-button"
                                  label="Continue to payment"
                                  onClick={[Function]}
                                  onKeyPress={null}
                                  size="lg"
                                  type="button"
                                  variant="primary"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    className="hd-btn hd-btn-primary "
                                    disabled={true}
                                    id="continue-to-payment-button"
                                    onClick={[Function]}
                                    onKeyPress={null}
                                    size="lg"
                                    type="button"
                                    variant="primary"
                                  >
                                    <button
                                      className="hd-btn hd-btn-primary  btn btn-primary btn-lg"
                                      disabled={true}
                                      id="continue-to-payment-button"
                                      onClick={[Function]}
                                      onKeyPress={null}
                                      type="button"
                                    >
                                      Continue to payment
                                    </button>
                                  </Button>
                                </HDButtonRefactor>
                              </ForwardRef>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </Col>
                </div>
              </Row>
              <ForwardRef
                confirmLabel="Go back to the homepage"
                customStyle="customize-quote customize-quote-decline"
                hideCancelButton={true}
                hideClose={true}
                id="home-page-modal"
                onBeforeOpen={null}
                onConfirm={[Function]}
                show={false}
                webAnalyticsView={null}
              >
                <ForwardRef
                  confirmLabel="Go back to the homepage"
                  customStyle="customize-quote customize-quote-decline"
                  hideCancelButton={true}
                  hideClose={true}
                  id="home-page-modal"
                  onBeforeOpen={null}
                  onBlur={null}
                  onCancel={null}
                  onChange={null}
                  onClick={null}
                  onConfirm={[Function]}
                  onDelete={null}
                  onEdit={null}
                  onFocus={null}
                  onSelect={null}
                  show={false}
                  webAnalyticsEvent={null}
                  webAnalyticsView={null}
                >
                  <HDModal
                    cancelLabel="Cancel"
                    className=""
                    confirmLabel="Go back to the homepage"
                    customStyle="customize-quote customize-quote-decline"
                    headerText=""
                    hideCancelButton={true}
                    hideClose={true}
                    hideConfirmButton={false}
                    hideFooter={false}
                    id="home-page-modal"
                    onBeforeOpen={null}
                    onBlur={null}
                    onCancel={null}
                    onChange={null}
                    onClick={null}
                    onClose={[Function]}
                    onConfirm={[Function]}
                    onDelete={null}
                    onEdit={null}
                    onFocus={null}
                    onSelect={null}
                    show={false}
                    webAnalyticsEvent={null}
                    webAnalyticsView={null}
                  >
                    <Portal
                      containerInfo={
                        <div
                          id="portal-root"
                        >
                          
                          
                          
                          
                          
                          
                        </div>
                      }
                    />
                  </HDModal>
                </ForwardRef>
              </ForwardRef>
            </div>
          </Container>
        </div>
      </HDConfirmContactDetailsPage>
    </Connect(HDConfirmContactDetailsPage)>
  </Provider>
</Component>
`;
