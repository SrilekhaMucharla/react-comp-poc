############## ${productName} CONFIG START ################

<Directory "${deploymentFolder}">
    Options FollowSymLinks
    AllowOverride All
    Require all granted
    RewriteEngine On
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule (.*) index.html
</Directory>
Alias ${appRoot} ${deploymentFolder}

# Proxied capabilities
<% _.forEach(capabilities, (capability) => {
%>ProxyPass ${joinPaths(appRoot, capability.service)} ${capability.proxyTarget}
<% }); %>

# Other Proxied URLs
<% _.forEach(otherProxies, (proxyConf) => { %>

<Location "${joinPaths(appRoot, proxyConf.context)}">
    ProxyPass ${proxyConf.target}<%
_.forEach(proxyConf.substitutions, (substitution) => {%>
    Substitute ${substitution}<% }); // END _.forEach(proxyConf.substitutions
if(hasContent(proxyConf.cookieRewrites)) {
    _.forEach(proxyConf.cookieRewrites.domains, (cookieDomainRewrite) => { %>
    ProxyPassReverseCookieDomain ${cookieDomainRewrite.original} ${cookieDomainRewrite.rewrite}<% }); // END _.forEach(proxyConf.cookieRewrites.domains
    _.forEach(proxyConf.cookieRewrites.paths, (cookiePathRewrite) => { %>
    ProxyPassReverseCookiePath ${cookiePathRewrite.original} ${cookiePathRewrite.rewrite}<% }); // END _.forEach(proxyConf.cookieRewrites.paths
} // END (hasContent(proxyConf.cookieRewrites) %>
</Location>
<% if (proxyConf.autoRewrite) {
%>ProxyPassReverse ${joinPaths(appRoot, proxyConf.context)} ${proxyConf.target}
<%}
_.forEach(proxyConf.reverse, (reverseConf) => {
%>ProxyPassReverse ${reverseConf.rewrite} ${reverseConf.original}
<% });
}) %>

############## ${productName} CONFIG END ################
